{
    "version": "https://jsonfeed.org/version/1",
    "title": "成为自由人 • All posts by \"一起学编程\" category",
    "description": "阿基米东的网络日志",
    "home_page_url": "https://luhuadong.com",
    "items": [
        {
            "id": "https://luhuadong.com/coding/python-run-simple-http-server.html",
            "url": "https://luhuadong.com/coding/python-run-simple-http-server.html",
            "title": "Python 临时启动简单的 HTTP 服务器",
            "date_published": "2020-08-16T02:53:27.000Z",
            "content_html": "<p>有时候我们需要临时启动一个简单的 Web Server 进行测试或分享文件，当然可以用 Apache、Nginx 这些 HTTP 服务，不过又显得过于麻烦。其实 Python 自带了一个简单的内建 HTTP 服务器，这时候用它就特别合适了！</p>\n<p>基本命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m Web服务器模块 [端口号，默认8000]</span><br></pre></td></tr></table></figure>\n<p>这里的 “Web 服务器模块” 有以下三种：</p>\n<ul>\n<li>BaseHTTPServer: 提供基本的 Web 服务和处理器类，分别是 HTTPServer 和 BaseHTTPRequestHandler；</li>\n<li>SimpleHTTPServer: 包含执行 GET 和 HEAD 请求的 SimpleHTTPRequestHandler 类；</li>\n<li>CGIHTTPServer: 包含处理 POST 请求和执行 CGIHTTPRequestHandler 类。</li>\n</ul>\n<p>例如：对于 Python2，只需要在你希望作为 Web 服务器根目录的位置，执行如下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m SimpleHTTPServer 8080</span><br></pre></td></tr></table></figure>\n<p>这将会使用 8080 端口提供 Web 服务，你可以访问 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDgw\">http://localhost:8080</span> 试试。</p>\n<p>对于 Python3，则可以使用如下命令启动 Web 服务：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 -m http.server 8080</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Python"
            ]
        },
        {
            "id": "https://luhuadong.com/coding/PyTK-2019-Day10.html",
            "url": "https://luhuadong.com/coding/PyTK-2019-Day10.html",
            "title": "【教孩子学编程】第10天 世界那么大，我想去看看",
            "date_published": "2019-02-12T02:53:27.000Z",
            "content_html": "<p><img data-src=\"/images/coding/%E9%98%BF%E5%A7%86%E6%96%AF%E7%89%B9%E4%B8%B9.jpeg\" alt=\"\"></p>\n<p>今天已经是本期春节特训营的最后一天了，我们讲一些轻松的话题 —— 世界那么大，我们一起去看看吧。</p>\n<p>但是在看世界之前，我们得先熟悉一下世界地图，对我们生活的世界有一个整体认识。刚好，我们可以用 Python 来绘制地图！</p>\n<h2 id=\"我们的地球\"><a class=\"markdownIt-Anchor\" href=\"#我们的地球\">#</a> 我们的地球</h2>\n<p>现在我们都知道地球是一个两极稍扁，赤道略鼓的不规则球体。确切地说，地球是个三轴椭球体，大多数时候，我们可以认为地球是一个十分接近正圆球体的星球。但是，得到这一正确认识却经历了相当漫长的过程。。。</p>\n<p><img data-src=\"/images/coding/%E8%9B%A4.jpg\" alt=\"\"></p>\n<h3 id=\"地球是圆的\"><a class=\"markdownIt-Anchor\" href=\"#地球是圆的\">#</a> 地球是圆的</h3>\n<p>据说，早在公元前 500 年前后，古希腊的<strong>毕达哥拉斯</strong>（Pythagoras，约公元前 580-500 年）就提出了大地是球形的观点。</p>\n<p>古希腊哲学家亚里士多德（Aristotle，公元前 384-322 年）根据月食时月球上地影是一个圆，科学地论证了地球是个球体。亚里士多德真厉害，每天要花那么多时间写作，还要长时间观察月亮，夜间南北往返，出海远行。</p>\n<p><img data-src=\"/images/coding/%E4%BA%9A%E9%87%8C%E5%A3%AB%E5%A4%9A%E5%BE%B7.jpeg\" alt=\"\"></p>\n<p>除了认为地球是圆的，古代的先知们还精确测出了地球圆周长！</p>\n<p>古埃及希腊裔人<strong>埃拉托斯特尼</strong>（Eratosthenes，公元前 276-194 年），生长于古埃及托勒密王朝时期，该王朝是亚历山大大帝的部将托勒密所建的。40 岁时，埃拉托斯特尼被托勒密三世任命为亚历山大图书馆的馆长。</p>\n<p><img data-src=\"/images/coding/%E4%BA%9A%E5%8E%86%E5%B1%B1%E5%A4%A7%E5%9B%BE%E4%B9%A6%E9%A6%86.jpg\" alt=\"\"></p>\n<p>在任图书馆馆长期间，一天无意间发现了一本纸草的古文书，里面有这么一段话：</p>\n<blockquote>\n<p>靠近尼罗河第一个瀑布的赛印（Syene，今埃及的亚斯文），每年 6 月 21 日中午，垂直竖立的柱子没有影子。</p>\n</blockquote>\n<p>这一小段不起眼的叙述，引起他极大兴趣！</p>\n<p><img data-src=\"/images/coding/%E4%BA%9A%E5%8E%86%E5%B1%B1%E5%A4%A7%E5%9F%8E%E5%92%8C%E8%B5%9B%E5%8D%B0.jpg\" alt=\"\"></p>\n<p>他做了一个实验：6 月 21 日，在亚历山大城竖立柱子，观察会不会有影子。结果发现柱子有影子。</p>\n<p>亚历山大城在赛印的北边，两地距离颇远，一地柱子有影子，另一地却无。他因此推测，如果地球是完全平的，不会产生这种现象，地球应该是圆的。</p>\n<p><img data-src=\"/images/coding/%E4%BA%9A%E5%8E%86%E5%B1%B1%E5%A4%A7%E5%9F%8E%E7%9A%84%E6%9F%B1%E5%AD%90.gif\" alt=\"\"></p>\n<p>6 月 21 日中午，从赛印的井边往下看，可看到太阳完全映在水井底部，此时太阳是位于正上方；同时，在亚历山大城，见到的太阳则有倾斜角。</p>\n<p>埃拉托斯特尼大胆假设地球是圆的，仅使用粗陋的测量工具，以及简单的几何学知识，推算出与实际误差很小的地球圆周长。他由柱子的影子计算出太阳的倾斜角约为 7 度，也就是说，亚历山大城与赛印的距离，是地球圆周的 7/360。从往来两个城市的商队得知，两地的距离约 500 斯塔德（stadia，希腊尺寸单位），因此推断出地球圆周长在 39690～46629 千米之间，与实际地球圆周 40008 千米非常接近。要知道，那是两千多年前啊。</p>\n<p><img data-src=\"/images/coding/%E6%8E%A8%E7%AE%97%E5%9C%B0%E7%90%83%E5%9C%86%E5%91%A8%E9%95%BF.jpg\" alt=\"\"></p>\n<p>现在我们知道，埃拉托斯特尼做实验的时间其实就是夏至。每年 6 月 21 日前后的正午，太阳会直射北回归线，而赛印就位于北回归线附近。因此夏至中午，那里垂直竖立的柱子就不会有影子。</p>\n<p><img data-src=\"/images/coding/%E5%A4%8F%E8%87%B3%E5%A4%AA%E9%98%B3%E7%9B%B4%E5%B0%84%E5%8C%97%E5%9B%9E%E5%BD%92%E7%BA%BF.jpg\" alt=\"\"></p>\n<h3 id=\"从地心说到日心说\"><a class=\"markdownIt-Anchor\" href=\"#从地心说到日心说\">#</a> 从地心说到日心说</h3>\n<p>虽然大家同意地球是圆的，但由于人们每天看到太阳、月亮从东边升起，在西边落下。于是就认为地球是宇宙的中心，日月星辰都是围绕地球运行的天体。</p>\n<p><img data-src=\"/images/coding/%E5%9C%B0%E5%BF%83%E8%AF%B4%E7%9A%84%E5%AE%87%E5%AE%99%E6%9E%84%E6%88%90.jpeg\" alt=\"\"></p>\n<p>后来，罗马帝国时期的天文学家<strong>克罗狄斯・托勒密</strong>（Claudius Ptolemy，90-168 年），进一步改进和完善了地心说，使之与天文观测符合得更好，并完成了天文学著作《至大论》，于是地心说成为了当时宇宙观的主流。</p>\n<p><img data-src=\"/images/coding/%E5%85%8B%E7%BD%97%E7%8B%84%E6%96%AF-%E6%89%98%E5%8B%92%E5%AF%86.jpeg\" alt=\"\"></p>\n<p>到了中世纪的欧洲，托勒密的地心说被教会所利用。教会明确提出：上帝生活在原动天，是上帝的推动才使得诸天围绕地球旋转，位于宇宙中心的地球，沐浴在上帝的恩泽之中，在上帝的意志下，所有的星星都向着地球上的人类闪闪发光。</p>\n<p>由于地心说受到教会的支持和保护，随着传教活动而传遍欧洲，人们的头脑中逐渐根深蒂固。在此后一千多年里，几乎没有人再对地心说表示怀疑。</p>\n<p><img data-src=\"/images/coding/%E6%8B%BE%E7%A9%97%E8%80%85-%E5%8A%A8%E5%9B%BE.gif\" alt=\"\"></p>\n<p>直到 16-17 世纪，才有人开始质疑。首先出场的是波兰人<strong>哥白尼</strong>（Copernicus，1473-1543 年），他提出了日心说，认为太阳才是宇宙的中心，地球才是绕着太阳转的。由于当时教皇比较开明，哥白尼论证日心说，并未遭到教皇的反对，但却害怕受到教会的反对和压迫，以至于他的著作《天体运行论》直到 1541 年才发表。</p>\n<p><img data-src=\"/images/coding/%E5%93%A5%E7%99%BD%E5%B0%BC2.jpeg\" alt=\"\"></p>\n<p>随后而来的是一代大师<strong>伽利略</strong>（Galileo，1564-1642 年），这位老哥拿着自制的天文望远镜，朝着月球上一看，哇不得了，发现月球上全是坑。接着一发不可收拾，又观测到很多天文现象。经过严密的推算，伽利略宣告说：日心说是对的！</p>\n<p><img data-src=\"/images/coding/%E4%BC%BD%E5%88%A9%E7%95%A5.jpeg\" alt=\"\"></p>\n<p>要知道当时还处于教会的统治下，为了巩固教会的威望、统一思想，任何发表支持日心说的言论都变得很危险。晚年的伽利略为了活命，被迫写了份声明，声称自己是不承认日心说的。勇敢的科学家<strong>布鲁诺</strong>（Bruno，1548-1600 年）因为坚持日心说，被教会活活烧死了。</p>\n<p><img data-src=\"/images/coding/%E5%B8%83%E9%B2%81%E8%AF%BA-%E6%97%A5%E5%BF%83%E8%AF%B4.jpeg\" alt=\"\"></p>\n<p>结束这一切争执的人，就是伟大的<strong>牛顿</strong>（1643-1727 年）。一个万有引力定律就把教会的地心说给埋葬了。</p>\n<p><img data-src=\"/images/coding/%E7%89%9B%E9%A1%BF.jpeg\" alt=\"\"></p>\n<h3 id=\"把世界连成一片\"><a class=\"markdownIt-Anchor\" href=\"#把世界连成一片\">#</a> 把世界连成一片</h3>\n<p>欧洲文艺复兴以来，航海家也没闲着。1492 年，<strong>哥伦布</strong>（1451-1506 年）在西班牙王室的资助下，率领船队横渡茫茫无际的大西洋，同年 10 月 12 日，哥伦布的船队抵达加勒比海上的一个小岛，从此发现了一个新世界 —— 美洲大陆。正是哥伦布发现美洲的壮举拉开了全球化时代的序幕。</p>\n<p><img data-src=\"/images/coding/%E9%A6%96%E6%AC%A1%E5%90%91%E5%85%8B%E9%87%8C%E6%96%AF%E6%89%98%E5%BC%97-%E5%93%A5%E4%BC%A6%E5%B8%83%E8%87%B4%E6%95%AC.jpg\" alt=\"\"></p>\n<p>1519-1522 年，葡萄牙航海探险家<strong>麦哲伦</strong>（1480-1521 年）率领船队横渡大西洋，进入太平洋、印度洋、好望角，最后回到欧洲，完成了环球航行。麦哲伦环球航行不仅成功开辟了新航线，还通过他的探险航行证明了地球是一个圆球。可惜在途径菲律宾群岛时，麦哲伦在与菲律宾土人冲突中被杀，无法见证伟大的时刻。</p>\n<p><img data-src=\"/images/coding/%E9%BA%A6%E5%93%B2%E4%BC%A6.jpeg\" alt=\"\"></p>\n<p>新航路的开辟，使得从欧洲到亚洲、美洲和非洲等地的交通往来日益密切，世界开始连成一个整体。欧洲大西洋沿岸工商业经济繁荣起来，促进了资本主义的产生和发展。</p>\n<p><img data-src=\"/images/coding/%E9%BA%A6%E5%93%B2%E4%BC%A6%E7%8E%AF%E7%90%83%E8%88%AA%E8%A1%8C.jpeg\" alt=\"\"></p>\n<h3 id=\"太空探索\"><a class=\"markdownIt-Anchor\" href=\"#太空探索\">#</a> 太空探索</h3>\n<p>随着技术的进步，人们开始进行太空探索，陆续从高空、从人造卫星、从月球的角度拍下了地球的照片。其中最著名的是下面这张 “蓝色弹珠”（英文：The Blue Marble）。</p>\n<p><img data-src=\"/images/coding/TheBlueMarble.jpg\" alt=\"\"></p>\n<p>该照片是在 1972 年 12 月 7 日由阿波罗 17 号太空船船员所拍摄的。当时太空船正运行至距离地球 45,000 公里（28,000 英里）之处。这张照片是迄今为止最广泛流传的照片 **。它是少数能把整个地球清晰地拍下来的照片，正因拍摄当时太空船正背向太阳。** 此时，对于身在太空船上的太空人来说，地球的大小就像小孩子的玩耍的弹珠一样，因而命名 “蓝色弹珠”。</p>\n<p>是不是感觉似曾相识？没错，微信 App 启动界面上的那个地球就来自于蓝色弹珠。</p>\n<h2 id=\"用-python-画地球\"><a class=\"markdownIt-Anchor\" href=\"#用-python-画地球\">#</a> 用 Python 画地球</h2>\n<p>接下来，我们使用 Basemap 包来绘制一些地图。我这里使用 Anaconda 安装，并在 Jupyter Notebook 中运行。打开终端，进入 Anaconda 环境，执行以下命令即可安装 Basemap：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install basemap</span><br></pre></td></tr></table></figure>\n<p>安装好之后就可以马上画一张地图啦～</p>\n<p>切换到工作目录，在终端执行  <code>jupyter notebook</code> ，将会在浏览器中打开一个页面，点击新建 Python 3 将会打开一个新的页面，如下所示。今天的代码，我们将在这里输入并运行。</p>\n<p><img data-src=\"/images/coding/JupyterNotebook.png\" alt=\"\"></p>\n<p>输入下面这几行代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> mpl_toolkits.basemap <span class=\"keyword\">import</span> Basemap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">map</span> = Basemap()</span><br><span class=\"line\"><span class=\"built_in\">map</span>.drawcoastlines()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p>见证奇迹的时候到了！按 Shift + Enter 运行，你将会看到一张世界地图：</p>\n<p><img data-src=\"/images/coding/Basemap%E9%BB%98%E8%AE%A4%E4%B8%96%E7%95%8C%E5%9C%B0%E5%9B%BE.png\" alt=\"\"></p>\n<p>代码中的前两行是导入相应的 Python 库，后三行代码绘制一张最简单的世界地图。</p>\n<p>Basemap 默认的投影方式是 cyl（圆柱等距离投影），我们可以通过传入参数来改变投影方式，比如使用 ortho 正射投影：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">map</span> = Basemap(projection=<span class=\"string\">&#x27;ortho&#x27;</span>, lat_0=<span class=\"number\">0</span>, lon_0=<span class=\"number\">105</span>)</span><br><span class=\"line\"><span class=\"built_in\">map</span>.drawcoastlines()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p>另外两个参数  <code>lat_0</code>  和  <code>lon_0</code>  分别表示中心点的经度和纬度，我们知道中国位于东八区，一个时区占经度 15°，所以  <code>lon_0=105</code>  的目的是为了让亚洲大陆面向我们。</p>\n<p><img data-src=\"/images/coding/ortho%E6%8A%95%E5%BD%B1-%E7%AE%80%E5%8D%95%E5%9C%B0%E5%9B%BE.png\" alt=\"\"></p>\n<p>即使有新的投影，但地图看上去实在太单调了，我们用一些颜色填充海洋和陆地吧！</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">map</span> = Basemap(projection=<span class=\"string\">&#x27;ortho&#x27;</span>, lat_0=<span class=\"number\">0</span>, lon_0=<span class=\"number\">105</span>)</span><br><span class=\"line\"><span class=\"built_in\">map</span>.drawmapboundary(fill_color=<span class=\"string\">&#x27;aqua&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">map</span>.fillcontinents(color=<span class=\"string\">&#x27;coral&#x27;</span>, lake_color=<span class=\"string\">&#x27;aqua&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">map</span>.drawcoastlines()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p>海洋和湖泊填上海蓝色 aqua，陆地填上珊瑚色 coral：</p>\n<p><img data-src=\"/images/coding/ortho%E6%8A%95%E5%BD%B1-%E6%B7%BB%E5%8A%A0%E9%A2%9C%E8%89%B2.png\" alt=\"\"></p>\n<p>但地图仍然有点空，在  <code>plt.show()</code>  前面加上下面这行代码，在地图上描绘国界：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">map</span>.drawcountries()</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/coding/ortho%E6%8A%95%E5%BD%B1-%E6%B7%BB%E5%8A%A0%E9%A2%9C%E8%89%B2%E5%92%8C%E5%9B%BD%E7%95%8C.png\" alt=\"\"></p>\n<p>如果觉得这样不够真实，我们可以直接采用 NASA 的 “蓝色弹珠” 风格作为地图背景：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">map</span> = Basemap(projection=<span class=\"string\">&#x27;ortho&#x27;</span>, lat_0=<span class=\"number\">0</span>, lon_0=<span class=\"number\">105</span>)</span><br><span class=\"line\"><span class=\"built_in\">map</span>.bluemarble()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/coding/ortho%E6%8A%95%E5%BD%B1-bluemarble%E8%83%8C%E6%99%AF.png\" alt=\"\"></p>\n<p>ortho 投影方式虽然看上去更真实，但不利于我们在一个平面上查看，所以我们接着使用 cyl 投影方式来展示。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize=(<span class=\"number\">16</span>,<span class=\"number\">8</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">map</span> = Basemap(projection=<span class=\"string\">&#x27;cyl&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">map</span>.drawcoastlines()</span><br><span class=\"line\"><span class=\"built_in\">map</span>.drawrivers()</span><br><span class=\"line\"><span class=\"built_in\">map</span>.bluemarble()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p>第一行代码的作用是设置画布大小，这样看起来舒服点～ 七大洲四大洋都一目了然啦，哈哈！</p>\n<p><img data-src=\"/images/coding/cyl%E6%8A%95%E5%BD%B1-%E4%B8%96%E7%95%8C%E5%9C%B0%E5%9B%BE-bluemarble.png\" alt=\"\"></p>\n<p>为了清晰得观察政治边界，暂时还是把 bluemarble 背景去掉吧。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize=(<span class=\"number\">16</span>,<span class=\"number\">8</span>))</span><br><span class=\"line\"><span class=\"built_in\">map</span> = Basemap()</span><br><span class=\"line\"><span class=\"built_in\">map</span>.drawcoastlines()</span><br><span class=\"line\"><span class=\"built_in\">map</span>.drawcountries()</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p>只留下海岸线和国界：</p>\n<p><img data-src=\"/images/coding/cyl%E6%8A%95%E5%BD%B1-%E6%B7%BB%E5%8A%A0%E5%9B%BD%E7%95%8C.png\" alt=\"\"></p>\n<h2 id=\"用-python-画中国地图\"><a class=\"markdownIt-Anchor\" href=\"#用-python-画中国地图\">#</a> 用 Python 画中国地图</h2>\n<p>世界太大了，一时间看不完，还是先把焦点放在我们亲爱的祖国身上吧！通过查阅资料，我们了解到中国最东端是东经 135 度，最西端是东经 73 度，最北端是北纬 53 度，最南端是北纬 3 度。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize=(<span class=\"number\">16</span>,<span class=\"number\">8</span>))</span><br><span class=\"line\"><span class=\"built_in\">map</span> = Basemap(llcrnrlon=<span class=\"number\">72</span>, llcrnrlat=<span class=\"number\">3</span>, urcrnrlon=<span class=\"number\">136</span>, urcrnrlat=<span class=\"number\">54</span>)</span><br><span class=\"line\"><span class=\"built_in\">map</span>.drawcoastlines()</span><br><span class=\"line\"><span class=\"built_in\">map</span>.drawcountries(linewidth=<span class=\"number\">1.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p>看上去有点奇怪，原因是默认的投影 cyl 是圆柱等距离投影，高纬度地区被横向拉长了。</p>\n<p><img data-src=\"/images/coding/cyl%E6%8A%95%E5%BD%B1-%E4%B8%AD%E5%9B%BD.png\" alt=\"\"></p>\n<p>好吧，我们换成 lcc 兰勃特投影，同时需要额外添加几个参数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize=(<span class=\"number\">16</span>,<span class=\"number\">8</span>))</span><br><span class=\"line\">m = Basemap(llcrnrlon=<span class=\"number\">77</span>, llcrnrlat=<span class=\"number\">14</span>, urcrnrlon=<span class=\"number\">140</span>, urcrnrlat=<span class=\"number\">51</span>, projection=<span class=\"string\">&#x27;lcc&#x27;</span>, lat_1=<span class=\"number\">33</span>, lat_2=<span class=\"number\">45</span>, lon_0=<span class=\"number\">100</span>)</span><br><span class=\"line\">m.drawcoastlines()</span><br><span class=\"line\">m.drawcountries(linewidth=<span class=\"number\">1.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p>这样看上去正常一些：</p>\n<p><img data-src=\"/images/coding/lcc%E6%8A%95%E5%BD%B1-%E4%B8%AD%E5%9B%BD.png\" alt=\"\"></p>\n<p>我们想把中国的省份划分出来，可以导入对应的 shapefile 文件，相应的文件资源我已经上传至百度网盘：</p>\n<p>链接: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMVJUVmw0NWZyU2FPWm5IekVtXzJKZUE=\">https://pan.baidu.com/s/1RTVl45frSaOZnHzEm_2JeA</span> 提取码: 98ff</p>\n<p>下载并解压 shapefile 资源文件，注意路径哦！然后在  <code>plt.show()</code>  前面加上下面这一行代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m.readshapefile(<span class=\"string\">&#x27;gadm36_CHN_shp/gadm36_CHN_1&#x27;</span>, <span class=\"string\">&#x27;states&#x27;</span>, drawbounds=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/coding/lcc%E6%8A%95%E5%BD%B1-%E4%B8%AD%E5%9B%BD%E7%9C%81%E4%BB%BD.png\" alt=\"\"></p>\n<p>给我们的祖国涂上中国红，中国红对应的颜色值是  <code>RGB(230,0,0)</code> ，转成十六进制就是 E60000。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize=(<span class=\"number\">16</span>,<span class=\"number\">8</span>))</span><br><span class=\"line\">m = Basemap(llcrnrlon=<span class=\"number\">77</span>, llcrnrlat=<span class=\"number\">14</span>, urcrnrlon=<span class=\"number\">140</span>, urcrnrlat=<span class=\"number\">51</span>, projection=<span class=\"string\">&#x27;lcc&#x27;</span>, lat_1=<span class=\"number\">33</span>, lat_2=<span class=\"number\">45</span>, lon_0=<span class=\"number\">100</span>)</span><br><span class=\"line\">m.drawcoastlines()</span><br><span class=\"line\">m.drawcountries(linewidth=<span class=\"number\">1.5</span>)</span><br><span class=\"line\">m.readshapefile(<span class=\"string\">&#x27;gadm36_CHN_shp/gadm36_CHN_1&#x27;</span>, <span class=\"string\">&#x27;states&#x27;</span>, drawbounds=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.patches <span class=\"keyword\">import</span> Polygon</span><br><span class=\"line\"></span><br><span class=\"line\">ax = plt.gca()</span><br><span class=\"line\"><span class=\"keyword\">for</span> nshape, seg <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(m.states):</span><br><span class=\"line\">    poly = Polygon(seg, facecolor=<span class=\"string\">&#x27;#E60000&#x27;</span>)</span><br><span class=\"line\">    ax.add_patch(poly)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/coding/lcc%E6%8A%95%E5%BD%B1-%E4%B8%AD%E5%9B%BD%E7%9C%81%E4%BB%BD-%E4%B8%AD%E5%9B%BD%E7%BA%A2.png\" alt=\"\"></p>\n<p>我们惊讶的发现，居然不包含台湾！台湾是中华人民共和国不可分割的领土，小卢老师决定在这里收复台湾啦！</p>\n<p>百度网盘上还有一份台湾的 shapefile 资源，下载并解压，我们把它补上：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.figure(figsize=(<span class=\"number\">16</span>,<span class=\"number\">8</span>))</span><br><span class=\"line\">m = Basemap(llcrnrlon=<span class=\"number\">77</span>, llcrnrlat=<span class=\"number\">14</span>, urcrnrlon=<span class=\"number\">140</span>, urcrnrlat=<span class=\"number\">51</span>, projection=<span class=\"string\">&#x27;lcc&#x27;</span>, lat_1=<span class=\"number\">33</span>, lat_2=<span class=\"number\">45</span>, lon_0=<span class=\"number\">100</span>)</span><br><span class=\"line\">m.drawcoastlines()</span><br><span class=\"line\">m.drawcountries(linewidth=<span class=\"number\">1.5</span>)</span><br><span class=\"line\">m.readshapefile(<span class=\"string\">&#x27;gadm36_CHN_shp/gadm36_CHN_1&#x27;</span>, <span class=\"string\">&#x27;states&#x27;</span>, drawbounds=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.patches <span class=\"keyword\">import</span> Polygon</span><br><span class=\"line\"></span><br><span class=\"line\">ax = plt.gca()</span><br><span class=\"line\"><span class=\"keyword\">for</span> nshape, seg <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(m.states):</span><br><span class=\"line\">    poly = Polygon(seg, facecolor=<span class=\"string\">&#x27;#E60000&#x27;</span>)</span><br><span class=\"line\">    ax.add_patch(poly)</span><br><span class=\"line\">    </span><br><span class=\"line\">m.readshapefile(<span class=\"string\">&#x27;gadm36_TWN_shp/gadm36_TWN_0&#x27;</span>, <span class=\"string\">&#x27;taiwan&#x27;</span>, drawbounds=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> nshape, seg <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(m.taiwan):</span><br><span class=\"line\">    poly = Polygon(seg, facecolor=<span class=\"string\">&#x27;#E60000&#x27;</span>)</span><br><span class=\"line\">    ax.add_patch(poly)</span><br></pre></td></tr></table></figure>\n<p>好啦，我们用代码实现了祖国的统一！</p>\n<p><img data-src=\"/images/coding/lcc%E6%8A%95%E5%BD%B1-%E4%B8%AD%E5%9B%BD%E7%9C%81%E4%BB%BD-%E4%B8%AD%E5%9B%BD%E7%BA%A2-%E5%90%AB%E5%8F%B0%E6%B9%BE.png\" alt=\"\"></p>\n<p>百度网盘中有一份 2010 年中国大陆的人口统计数据，我们可以将其中的人口数据展示到地图上，直观地看看中国的人口分布情况。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> mpl_toolkits.basemap <span class=\"keyword\">import</span> Basemap</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.patches <span class=\"keyword\">import</span> Polygon</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.colors <span class=\"keyword\">import</span> rgb2hex</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">16</span>,<span class=\"number\">8</span>))</span><br><span class=\"line\">m = Basemap(llcrnrlon=<span class=\"number\">77</span>, llcrnrlat=<span class=\"number\">14</span>, urcrnrlon=<span class=\"number\">140</span>, urcrnrlat=<span class=\"number\">51</span>, projection=<span class=\"string\">&#x27;lcc&#x27;</span>, lat_1=<span class=\"number\">33</span>, lat_2=<span class=\"number\">45</span>, lon_0=<span class=\"number\">100</span>)</span><br><span class=\"line\">m.drawcountries(linewidth=<span class=\"number\">1.5</span>)</span><br><span class=\"line\">m.drawcoastlines()</span><br><span class=\"line\"></span><br><span class=\"line\">m.readshapefile(<span class=\"string\">&#x27;gadm36_CHN_shp/gadm36_CHN_1&#x27;</span>, <span class=\"string\">&#x27;states&#x27;</span>, drawbounds=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">&#x27;data/2010年各地区户数人口数和性别比.csv&#x27;</span>)</span><br><span class=\"line\">df[<span class=\"string\">&#x27;省名&#x27;</span>] = df.地区.<span class=\"built_in\">str</span>[:<span class=\"number\">2</span>]</span><br><span class=\"line\">df.set_index(<span class=\"string\">&#x27;省名&#x27;</span>, inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">statenames=[]</span><br><span class=\"line\">colors=&#123;&#125;</span><br><span class=\"line\">cmap = plt.cm.YlOrRd</span><br><span class=\"line\">vmax = <span class=\"number\">100000000</span></span><br><span class=\"line\">vmin = <span class=\"number\">3000000</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> shapedict <span class=\"keyword\">in</span> m.states_info:</span><br><span class=\"line\">    statename = shapedict[<span class=\"string\">&#x27;NL_NAME_1&#x27;</span>]</span><br><span class=\"line\">    p = statename.split(<span class=\"string\">&#x27;|&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(p) &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">        s = p[<span class=\"number\">1</span>]</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        s = p[<span class=\"number\">0</span>]</span><br><span class=\"line\">    s = s[:<span class=\"number\">2</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s == <span class=\"string\">&#x27;黑龍&#x27;</span>:</span><br><span class=\"line\">        s = <span class=\"string\">&#x27;黑龙&#x27;</span></span><br><span class=\"line\">    statenames.append(s)</span><br><span class=\"line\">    pop = df[<span class=\"string\">&#x27;人口数&#x27;</span>][s]</span><br><span class=\"line\">    colors[s] = cmap(np.sqrt((pop - vmin) / (vmax - vmin)))[:<span class=\"number\">3</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">ax = plt.gca()</span><br><span class=\"line\"><span class=\"keyword\">for</span> nshape, seg <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(m.states):</span><br><span class=\"line\">    color = rgb2hex(colors[statenames[nshape]])</span><br><span class=\"line\">    poly = Polygon(seg, facecolor=color, edgecolor=color)</span><br><span class=\"line\">    ax.add_patch(poly)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n<p>可以看到，我国人口分布情况是<strong>东多西少</strong>，沿海经济发达地区人口明显更多，其中河南、山东、广东、四川这几个省份人口最多。</p>\n<p><img data-src=\"/images/coding/lcc%E6%8A%95%E5%BD%B1-%E4%B8%AD%E5%9B%BD-%E4%BA%BA%E5%8F%A3%E5%88%86%E6%9E%90.png\" alt=\"\"></p>\n<h2 id=\"在地图上展示数据\"><a class=\"markdownIt-Anchor\" href=\"#在地图上展示数据\">#</a> 在地图上展示数据</h2>\n<p>世界那么大，是不是怎么看都意犹未尽？由于 Basemap 绘制的是静态地图，展示数据时比较麻烦，接下来我们使用 pyecharts 再来做一些有趣的地图。</p>\n<p>如果还没有安装 pyecharts 环境，则在 Anaconda 环境下执行以下命令即可：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pyecharts</span><br><span class=\"line\">pip install pyecharts-snapshot</span><br></pre></td></tr></table></figure>\n<p>另外还需要安装一些地图包：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install echarts-countries-pypkg</span><br><span class=\"line\">pip install echarts-china-provinces-pypkg</span><br><span class=\"line\">pip install echarts-china-cities-pypkg</span><br><span class=\"line\">pip install echarts-china-counties-pypkg</span><br></pre></td></tr></table></figure>\n<h3 id=\"世界地图\"><a class=\"markdownIt-Anchor\" href=\"#世界地图\">#</a> 世界地图</h3>\n<p>还是在 Jupyter Notebook 中写代码，先来画一张简单的世界地图，并给面积最大的 5 个国家涂上颜色。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pyecharts <span class=\"keyword\">import</span> Map</span><br><span class=\"line\"></span><br><span class=\"line\">value = [<span class=\"number\">95.1</span>, <span class=\"number\">23.2</span>, <span class=\"number\">43.3</span>, <span class=\"number\">66.4</span>, <span class=\"number\">88.5</span>]</span><br><span class=\"line\">attr = [<span class=\"string\">&quot;China&quot;</span>, <span class=\"string\">&quot;Canada&quot;</span>, <span class=\"string\">&quot;Brazil&quot;</span>, <span class=\"string\">&quot;Russia&quot;</span>, <span class=\"string\">&quot;United States&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">map</span> = Map(<span class=\"string\">&quot;世界地图示例&quot;</span>, width=<span class=\"number\">1200</span>, height=<span class=\"number\">600</span>)</span><br><span class=\"line\"><span class=\"built_in\">map</span>.add(<span class=\"string\">&quot;世界地图&quot;</span>, attr, value, maptype=<span class=\"string\">&quot;world&quot;</span>, </span><br><span class=\"line\">         is_visualmap=<span class=\"literal\">True</span>, visual_text_color=<span class=\"string\">&#x27;#000&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">map</span>.render(path=<span class=\"string\">&quot;./data/世界地图.html&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>在浏览器中打开该 HTML 页面：</p>\n<p><img data-src=\"/images/coding/pyecharts-%E4%B8%96%E7%95%8C%E5%9C%B0%E5%9B%BE%E7%A4%BA%E4%BE%8B.png\" alt=\"\"></p>\n<h3 id=\"中国红包地图\"><a class=\"markdownIt-Anchor\" href=\"#中国红包地图\">#</a> 中国红包地图</h3>\n<p>春节刚过去不久，我在网上找了一些关于各省份红包大小的数据，我们一起来绘制一张<strong>中国红包地图</strong>。</p>\n<p><img data-src=\"/images/coding/%E7%BA%A2%E5%8C%85%E4%BD%BF%E4%B8%8D%E5%BE%97.jpeg\" alt=\"\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data = &#123;<span class=\"string\">&#x27;河南&#x27;</span>:<span class=\"number\">400</span>, <span class=\"string\">&#x27;北京&#x27;</span>:<span class=\"number\">2900</span>, <span class=\"string\">&#x27;河北&#x27;</span>:<span class=\"number\">800</span>, <span class=\"string\">&#x27;辽宁&#x27;</span>:<span class=\"number\">500</span>, <span class=\"string\">&#x27;江西&#x27;</span>:<span class=\"number\">500</span>, </span><br><span class=\"line\">        <span class=\"string\">&#x27;上海&#x27;</span>:<span class=\"number\">1600</span>, <span class=\"string\">&#x27;安徽&#x27;</span>:<span class=\"number\">800</span>, <span class=\"string\">&#x27;江苏&#x27;</span>:<span class=\"number\">1000</span>, <span class=\"string\">&#x27;湖南&#x27;</span>:<span class=\"number\">800</span>, <span class=\"string\">&#x27;浙江&#x27;</span>:<span class=\"number\">3100</span>, </span><br><span class=\"line\">        <span class=\"string\">&#x27;海南&#x27;</span>:<span class=\"number\">400</span>, <span class=\"string\">&#x27;湖北&#x27;</span>:<span class=\"number\">400</span>, <span class=\"string\">&#x27;黑龙江&#x27;</span>:<span class=\"number\">500</span>, <span class=\"string\">&#x27;四川&#x27;</span>:<span class=\"number\">800</span>, <span class=\"string\">&#x27;重庆&#x27;</span>:<span class=\"number\">500</span>, </span><br><span class=\"line\">        <span class=\"string\">&#x27;广东&#x27;</span>:<span class=\"number\">50</span>, <span class=\"string\">&#x27;澳门&#x27;</span>:<span class=\"number\">600</span>, <span class=\"string\">&#x27;香港&#x27;</span>:<span class=\"number\">850</span>, <span class=\"string\">&#x27;台湾&#x27;</span>: <span class=\"number\">660</span>, <span class=\"string\">&#x27;陕西&#x27;</span>:<span class=\"number\">400</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;内蒙古&#x27;</span>:<span class=\"number\">300</span>, <span class=\"string\">&#x27;云南&#x27;</span>:<span class=\"number\">400</span>, <span class=\"string\">&#x27;贵州&#x27;</span>:<span class=\"number\">300</span>, <span class=\"string\">&#x27;吉林&#x27;</span>:<span class=\"number\">500</span>, <span class=\"string\">&#x27;山西&#x27;</span>:<span class=\"number\">300</span>, </span><br><span class=\"line\">        <span class=\"string\">&#x27;山东&#x27;</span>:<span class=\"number\">800</span>, <span class=\"string\">&#x27;福建&#x27;</span>:<span class=\"number\">3500</span>, <span class=\"string\">&#x27;青海&#x27;</span>:<span class=\"number\">300</span>, <span class=\"string\">&#x27;天津&#x27;</span>:<span class=\"number\">1000</span>, <span class=\"string\">&#x27;西藏&#x27;</span>:<span class=\"number\">300</span>, </span><br><span class=\"line\">        <span class=\"string\">&#x27;新疆&#x27;</span>:<span class=\"number\">500</span>, <span class=\"string\">&#x27;甘肃&#x27;</span>:<span class=\"number\">400</span>, <span class=\"string\">&#x27;宁夏&#x27;</span>:<span class=\"number\">500</span>, <span class=\"string\">&#x27;广西&#x27;</span>:<span class=\"number\">300</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">province = <span class=\"built_in\">list</span>(data.keys())</span><br><span class=\"line\">values = <span class=\"built_in\">list</span>(data.values())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">map</span> = Map(<span class=\"string\">&quot;全国压岁钱地图&quot;</span>, <span class=\"string\">&#x27;中国地图&#x27;</span>, width=<span class=\"number\">1000</span>, height=<span class=\"number\">800</span>)</span><br><span class=\"line\"><span class=\"comment\"># maptype=&#x27;china&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">map</span>.add(<span class=\"string\">&quot;&quot;</span>, province, values, visual_range=[<span class=\"number\">0</span>, <span class=\"number\">1000</span>], maptype=<span class=\"string\">&#x27;china&#x27;</span>, </span><br><span class=\"line\">        is_visualmap=<span class=\"literal\">True</span>, visual_text_color=<span class=\"string\">&#x27;#000&#x27;</span>, is_label_show=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"comment\">#map.show_config()</span></span><br><span class=\"line\"><span class=\"built_in\">map</span>.render(path=<span class=\"string\">&quot;./data/中国地图.html&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>在浏览器中打开该 HTML 页面：</p>\n<p><img data-src=\"/images/coding/pyecharts-%E5%85%A8%E5%9B%BD%E5%8E%8B%E5%B2%81%E9%92%B1%E5%9C%B0%E5%9B%BE.png\" alt=\"\"></p>\n<p>小卢老师到现在都还没发家致富，可能就是因为广东的红包太小啦！</p>\n<p><img data-src=\"/images/coding/%E7%BB%99%E4%BD%A0%E8%B7%AA%E4%BA%86.gif\" alt=\"\"></p>\n<h3 id=\"广东省人均-gdp-排名\"><a class=\"markdownIt-Anchor\" href=\"#广东省人均-gdp-排名\">#</a> 广东省人均 GDP 排名</h3>\n<p>我在网上找了一份<strong> 2018 年广东省各城市人均 GDP 排名</strong>的数据，我们把这些数据画出来。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 广东省 2018年人均 GDP 排名</span></span><br><span class=\"line\">cities = [<span class=\"string\">&#x27;深圳市&#x27;</span>, <span class=\"string\">&#x27;珠海市&#x27;</span>, <span class=\"string\">&#x27;广州市&#x27;</span>, <span class=\"string\">&#x27;佛山市&#x27;</span>, <span class=\"string\">&#x27;中山市&#x27;</span>, <span class=\"string\">&#x27;东莞市&#x27;</span>, <span class=\"string\">&#x27;惠州市&#x27;</span>, </span><br><span class=\"line\">        <span class=\"string\">&#x27;江门市&#x27;</span>, <span class=\"string\">&#x27;肇庆市&#x27;</span>, <span class=\"string\">&#x27;阳江市&#x27;</span>, <span class=\"string\">&#x27;茂名市&#x27;</span>, <span class=\"string\">&#x27;韶关市&#x27;</span>, <span class=\"string\">&#x27;汕头市&#x27;</span>, <span class=\"string\">&#x27;湛江市&#x27;</span>, </span><br><span class=\"line\">        <span class=\"string\">&#x27;清远市&#x27;</span>, <span class=\"string\">&#x27;潮州市&#x27;</span>, <span class=\"string\">&#x27;揭阳市&#x27;</span>, <span class=\"string\">&#x27;云浮市&#x27;</span>, <span class=\"string\">&#x27;河源市&#x27;</span>, <span class=\"string\">&#x27;汕尾市&#x27;</span>, <span class=\"string\">&#x27;梅州市&#x27;</span>]</span><br><span class=\"line\"><span class=\"comment\"># 单位：万元（人民币）</span></span><br><span class=\"line\">avgGDP = [<span class=\"number\">19.33</span>, <span class=\"number\">16.51</span>, <span class=\"number\">15.77</span>, <span class=\"number\">12.98</span>, <span class=\"number\">11.14</span>,  <span class=\"number\">9.92</span>,  <span class=\"number\">8.59</span>, </span><br><span class=\"line\">           <span class=\"number\">6.36</span>,  <span class=\"number\">5.35</span>,  <span class=\"number\">5.31</span>,  <span class=\"number\">4.98</span>,  <span class=\"number\">4.51</span>,  <span class=\"number\">4.48</span>,  <span class=\"number\">4.12</span>, </span><br><span class=\"line\">           <span class=\"number\">4.05</span>,  <span class=\"number\">4.03</span>,  <span class=\"number\">3.54</span>,  <span class=\"number\">3.39</span>,  <span class=\"number\">3.25</span>,  <span class=\"number\">3.01</span>,  <span class=\"number\">2.54</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">map</span> = Map(<span class=\"string\">&#x27;2018年广东各城市人均GDP排名&#x27;</span>,<span class=\"string\">&#x27;广东地图&#x27;</span>, width=<span class=\"number\">1000</span>, height=<span class=\"number\">800</span>)</span><br><span class=\"line\"><span class=\"built_in\">map</span>.add(<span class=\"string\">&#x27;广东&#x27;</span>, cities, avgGDP, visual_range=[<span class=\"number\">0</span>, <span class=\"number\">20</span>], maptype=<span class=\"string\">&#x27;广东&#x27;</span>, </span><br><span class=\"line\">         is_visualmap=<span class=\"literal\">True</span>, visual_text_color=<span class=\"string\">&#x27;#000&#x27;</span>, is_label_show=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">map</span>.render(path=<span class=\"string\">&quot;./data/广东地图.html&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>噔噔噔，果然是粤港澳大湾区最红～</p>\n<p><img data-src=\"/images/coding/pyecharts-2018%E5%B9%B4%E5%B9%BF%E4%B8%9C%E5%90%84%E5%9F%8E%E5%B8%82%E4%BA%BA%E5%9D%87GDP%E6%8E%92%E5%90%8D.png\" alt=\"\"></p>\n<h3 id=\"清远房价地图\"><a class=\"markdownIt-Anchor\" href=\"#清远房价地图\">#</a> 清远房价地图</h3>\n<p>再来看看我们的家乡清远，我找到了<strong> 2019 年 2 月份清远市各县区平均房价</strong>数据。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">counties = [<span class=\"string\">&#x27;清城区&#x27;</span>, <span class=\"string\">&#x27;清新区&#x27;</span>, <span class=\"string\">&#x27;佛冈县&#x27;</span>, <span class=\"string\">&#x27;英德市&#x27;</span>, <span class=\"string\">&#x27;阳山县&#x27;</span>, </span><br><span class=\"line\">            <span class=\"string\">&#x27;连州市&#x27;</span>, <span class=\"string\">&#x27;连南瑶族自治县&#x27;</span>, <span class=\"string\">&#x27;连山壮族瑶族自治县&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2019年2月各县区房价排行</span></span><br><span class=\"line\">prices = [<span class=\"number\">9343</span>, <span class=\"number\">8172</span>, <span class=\"number\">7950</span>, <span class=\"number\">7360</span>, <span class=\"number\">6500</span>, <span class=\"number\">6383</span>, <span class=\"number\">4000</span>, <span class=\"number\">4000</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">map</span> = Map(<span class=\"string\">&#x27;2019年2月各县区房价热力图&#x27;</span>,<span class=\"string\">&#x27;清远地图&#x27;</span>, width=<span class=\"number\">1000</span>, height=<span class=\"number\">800</span>)</span><br><span class=\"line\"><span class=\"built_in\">map</span>.add(<span class=\"string\">&quot;清远&quot;</span>, counties, prices, visual_range=[<span class=\"number\">4000</span>, <span class=\"number\">11000</span>], maptype=<span class=\"string\">&#x27;清远&#x27;</span>, </span><br><span class=\"line\">         is_visualmap=<span class=\"literal\">True</span>, visual_text_color=<span class=\"string\">&#x27;#000&#x27;</span>, is_label_show=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">map</span>.render(path=<span class=\"string\">&quot;./data/清远地图.html&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>由于连南和连山两个少数名族自治县的房地产不发达，于是我瞎编了个 4000 元。整体来看，从北往南，也就是说，越靠近大湾区的地方房价就越高，未来的发展速度也越快。</p>\n<p><img data-src=\"/images/coding/pyecharts-2019%E5%B9%B42%E6%9C%88%E5%90%84%E5%8E%BF%E5%8C%BA%E6%88%BF%E4%BB%B7%E7%83%AD%E5%8A%9B%E5%9B%BE.png\" alt=\"\"></p>\n<p>既然说到房子，顺便打个广告吧～</p>\n<p>买房置业，定制家具的可以找我大姐！</p>\n<img data-src=\"/images/coding/广告-大姐.jpeg\" width=\"200\" />\n<p>新房、二手房交易，家居装修的可以找我二姐！</p>\n<img data-src=\"/images/coding/广告-二姐.jpeg\" width=\"200\" />\n<p>学编程、聊人生、谈理想、做环保、哈哈哈的可以找我！</p>\n<img data-src=\"/images/coding/广告-大哥.jpeg\" width=\"200\" />\n<p>划红色圈圈的地方都是我们的业务范围！</p>\n<img data-src=\"/images/coding/广告-业务范围.jpeg\" width=\"200\" />\n<p>唔。。。</p>\n<p><img data-src=\"/images/coding/%E5%8F%91%E7%8E%B0%E4%BD%9C%E4%B8%9A%E8%BF%98%E6%B2%A1%E5%86%99.jpeg\" alt=\"\"></p>\n<h2 id=\"作业\"><a class=\"markdownIt-Anchor\" href=\"#作业\">#</a> 作业</h2>\n<p>（1）细心的你可能发现，在 Basemap 绘制的中国地图上，除了台湾，其实藏南地区也没有画上。请上网查阅资料，了解为什么台湾和藏南地区的主权归属存在争议？</p>\n<p>（2）中国是全球人口最多的国家，思考一下，人口增长可能会对环境和我们的日常生活造成什么影响？</p>\n<p>（3）绘制你所在省份的地图，看看周边都有哪些城市，说说你对这些城市的印象。</p>\n<p>（4）思考气候变化可能会对我们日常生活造成什么影响。</p>\n<h2 id=\"思考\"><a class=\"markdownIt-Anchor\" href=\"#思考\">#</a> 思考</h2>\n<ol>\n<li>为什么地球是圆的，但是地面却是平的？<br>\n答：因为我们人类太渺小了！</li>\n<li>为什么使用国外的数据时，台湾和藏南地区存在问题？<br>\n答：历史原因。</li>\n<li>世界观是什么？<br>\n答：世界观，也叫宇宙观，是一个人对整个世界的根本看法，世界观建立于一个人对自然、人生、社会和精神的、科学的、系统的、丰富的认识基础上，它包括自然观、社会观、人生观、价值观。世界观不仅仅是认识问题，而且还包括坚定的信念和积极的行动。</li>\n</ol>\n<h2 id=\"附录\"><a class=\"markdownIt-Anchor\" href=\"#附录\">#</a> 附录</h2>\n<h3 id=\"地图投影\"><a class=\"markdownIt-Anchor\" href=\"#地图投影\">#</a> 地图投影</h3>\n<p>地图投影（Map Projection）是利用一定数学法则把地球表面的经、纬线转换到平面上的理论和方法。</p>\n<p>由于地球是一个赤道略宽、两极略扁的不规则的梨形球体，故其表面是一个不可展平的曲面，所以运用任何数学方法进行这种转换都会产生误差和变形，为按照不同的需求缩小误差，就产生了各种投影方法。</p>\n<p>地图投影是把地球表面的任意点，利用一定数学法则，转换到地图平面上的理论和方法。</p>\n<p>书面概念化定义：地图投影就是指建立地球表面（或其他星球表面或天球面）上的点与投影平面（即地图平面）上点之间的一一对应关系的方法。即建立之间的数学转换公式。它将作为一个不可展平的曲面即地球表面投影到一个平面的基本方法，保证了空间信息在区域上的联系与完整。这个投影过程将产生投影变形，而且不同的投影方法具有不同性质和大小的投影变形。</p>\n<p>常用的投影方法有：</p>\n<ul>\n<li>墨卡托投影（正轴等角圆柱投影）</li>\n<li>高斯 - 克吕格投影</li>\n<li>斜轴等面积方位投影</li>\n<li>双标准纬线等角圆锥投影</li>\n<li>等差分纬线多圆锥投影</li>\n<li>正轴方位投影</li>\n</ul>\n<h3 id=\"领土问题\"><a class=\"markdownIt-Anchor\" href=\"#领土问题\">#</a> 领土问题</h3>\n<p>以下为历史上属于中国，但自近代在列强侵略战争中所失去的领土。现今的中华人民共和国政府不再宣称对其拥有主权。</p>\n<ul>\n<li><strong>外东北</strong>：是指夹在外兴安岭（斯塔诺夫山脉）、鲸海（日本海）、鄂霍次克海、黑龙江、乌苏里江之间的，包括江东六十四屯和库页岛在内一百多万平方公里的地区。</li>\n<li><strong>唐努乌梁海</strong>：地处外蒙古西北部，北靠萨彦岭，南抵唐努山，是位于两山之间的狭长地带，总面积约 17 万平方公里。</li>\n<li><strong>巴尔喀什湖地区</strong>：巴尔喀什湖原是中国的西部疆界。</li>\n</ul>\n<h2 id=\"references\"><a class=\"markdownIt-Anchor\" href=\"#references\">#</a> References</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvbmV3cy8yMzgxNzU=\">基于 Python 轻松绘制地图</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20va2VxaXB1L3AvNzI4Mzk5MS5odG1s\">Python 框架 - pygal 之世界地图</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pmeTIwNzIxNTEvYXJ0aWNsZS9kZXRhaWxzLzg2Njg0MTE2\">https://blog.csdn.net/zfy2072151/article/details/86684116</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2J5YzIzMzUxOC9hcnRpY2xlL2RldGFpbHMvNzk4MDA2MjM=\">https://blog.csdn.net/byc233518/article/details/79800623</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BlbmdyYW54aW5kb25nL2FydGljbGUvZGV0YWlscy83OTEzNjQ4Ng==\">Basemap 手册 —— 第一章入门（始于颜值）</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAxMDkwMDIxMg==\">用 Python 画中国地图（二）</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTE1OTY0NTUvYXJ0aWNsZS9kZXRhaWxzLzc5NjIxNzU4\">Basemap 绘制地图</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYXNlbWFwdHV0b3JpYWwucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0L3Bsb3R0aW5nX2RhdGEuaHRtbA==\">Basemap tutorial 0.1 documentation</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXNzdHVkaW8ud29yZHByZXNzLmNvbS8=\">The GIS Studio</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zdGF0cy5nb3YuY24vdGpzai9wY3NqL3JrcGMvNnJwL2luZGV4Y2UuaHRt\">中国 2010 年人口普查资料</span></li>\n</ul>\n",
            "tags": [
                "Python",
                "教孩子学编程"
            ]
        },
        {
            "id": "https://luhuadong.com/coding/PyTK-2019-Day09.html",
            "url": "https://luhuadong.com/coding/PyTK-2019-Day09.html",
            "title": "【教孩子学编程】第9天 老师的点名神器",
            "date_published": "2019-02-11T02:53:27.000Z",
            "content_html": "<p><img data-src=\"/images/coding/%E6%95%99%E5%AE%A41997.jpg\" alt=\"\"></p>\n<p>小时候上学点名，大学上课点名，出来社会上班还是要点名。小卢老师也是烦透了，好想逃…</p>\n<p><img data-src=\"/images/coding/%E7%99%BE%E5%BA%A6%E4%B8%80%E4%B8%8B%E4%B8%8D%E5%B0%B1%E7%9F%A5%E9%81%93%E4%BA%86%E5%90%97.jpg\" alt=\"\"></p>\n<p>心里默念别叫我！别叫我！千万别叫我！越是这样，偏偏就被点到，真是醉了！</p>\n<p><img data-src=\"/images/coding/%E5%88%AB%E5%8F%AB%E6%88%91.jpg\" alt=\"\"></p>\n<p><img data-src=\"/images/coding/%E8%A2%AB%E7%82%B9%E5%90%8D%E6%97%B6%E7%9A%84%E8%A1%A8%E6%83%85.jpg\" alt=\"\"></p>\n<p>所以本着公平公正的原则，让大家都有机会被点名，今天我们就用 Python 来写一个帮老师点名的程序吧～</p>\n<h2 id=\"图形界面\"><a class=\"markdownIt-Anchor\" href=\"#图形界面\">#</a> 图形界面</h2>\n<p>前面的编程我们一直都在终端控制台中操作，总觉得不够过瘾，本节课程将介绍如何编写带有可视窗口的程序，也就是 GUI 图形用户界面编程。</p>\n<p><img data-src=\"/images/coding/%E9%BE%9FGUI.png\" alt=\"\"></p>\n<p>我们会使用一个叫 wxPython 的库，如果你的编程环境中还没有，可以打开终端执行如下命令安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip3 install -U wxpython</span><br></pre></td></tr></table></figure>\n<p>安装好之后，我们先来画个框。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> wx</span><br><span class=\"line\">app = wx.App()</span><br><span class=\"line\">win = wx.Frame(<span class=\"literal\">None</span>)</span><br><span class=\"line\">win.Show()</span><br><span class=\"line\">app.MainLoop()</span><br></pre></td></tr></table></figure>\n<p>代码说明：</p>\n<ul>\n<li>第一行代码导入 wx 模块，导入之后才能使用 wxPython 相关的图形界面组件。</li>\n<li>第二行代码创建应用程序对象，有了这个对象就说明你有了一个应用程序。</li>\n<li>第三行代码创建一个单独的窗口，也就是待会我们能够看到的一个图形窗口， <code>wx.Frame</code>  函数传入一个参数 None，表示这个窗口没有父窗口，而是一个独立的窗口。</li>\n<li>第四行代码设置窗口可见，否则我们啥都看不见。</li>\n<li>第五行代码是让应用程序进入事件循环，这样应用程序就会等待我们操作，比如点击关闭按钮。</li>\n</ul>\n<p><img data-src=\"/images/coding/%E4%B8%80%E5%8F%AA%E5%A4%A7%E8%B1%A1.jpeg\" alt=\"\"></p>\n<p>保存为 <span class=\"exturl\" data-url=\"aHR0cDovL2xvdHRlcnkucHk=\">lottery.py</span> 文件，然后在终端执行  <code>python3 lottery.py</code> 。如无意外，你应该可以看到一个空白窗口（在不同系统看到的窗口会有点不同）。其中最上方的一栏称为标题栏，通常包含最小化、最大化和关闭按钮。</p>\n<p><img data-src=\"/images/coding/wxPython-%E7%A9%BA%E7%99%BD%E7%AA%97%E5%8F%A3.png\" alt=\"\"></p>\n<h2 id=\"几个概念\"><a class=\"markdownIt-Anchor\" href=\"#几个概念\">#</a> 几个概念</h2>\n<p>在编写 GUI 图形界面程序之前，我们先来了解几个概念：</p>\n<h3 id=\"像素\"><a class=\"markdownIt-Anchor\" href=\"#像素\">#</a> 像素</h3>\n<p>像素的英文名称是 Pixel，表示一个像素通常被视为图像的最小的完整采样。像素是一个相对长度单位，也就是说没有人规定一个像素一定要多长多宽。</p>\n<p>我们在计算机上看到的图片有位图和矢量图两种，像素就是构成位图的基本单位，我们手机拍摄的照片也是位图，文件后缀通常是 jpg。</p>\n<p><img data-src=\"/images/coding/%E5%83%8F%E7%B4%A0%E8%9C%98%E8%9B%9B%E4%BE%A0.jpeg\" alt=\"\"></p>\n<p>当你把一张照片放大时，你会发现在色彩交界处有明显的锯齿感，每一个小方点实际上就是像素。一张色彩绚丽的数码相片就是由许许多多这样的小方点组成，所以像素越高，画面越清晰，越能表达颜色的真实感，但随之而来的是存储空间的增加。</p>\n<h3 id=\"分辨率\"><a class=\"markdownIt-Anchor\" href=\"#分辨率\">#</a> 分辨率</h3>\n<p>分辨率的英文名称是 Resolution，通常用于描述显示设备能显示多少像素。比如我们听到的 2K、4K 电视，指的就是电视机液晶屏所支持的最高分辨率。</p>\n<p><img data-src=\"/images/coding/2k-4k.jpeg\" alt=\"\"></p>\n<p>2K 对应的分辨率是 2048×1080，意思是整个屏幕中有 2048×1080 ≈ 2×10<sup>6</sup> 个像素点。可以把整个屏幕想象成一个大型棋盘，其中横向 2048 个点，纵向 1080 个点。</p>\n<h3 id=\"尺寸\"><a class=\"markdownIt-Anchor\" href=\"#尺寸\">#</a> 尺寸</h3>\n<p>这里的尺寸指的是屏幕真实的物理尺寸，通常使用英寸（inch）为计量单位，1 英寸 = 2.54 厘米。需要注意的是，屏幕尺寸的是以屏幕对角线的长度来计算的，我们平时听到的手机大小是 4.7 寸、5.5 寸指的就是手机屏幕对角线的尺寸。</p>\n<p><img data-src=\"/images/coding/%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87%E5%B1%8F%E5%B9%95%E5%B0%BA%E5%AF%B8.jpeg\" alt=\"\"></p>\n<p>前面我们说了，像素是一个相对长度单位，实际上说的是像素大小和屏幕尺寸没有关系。一个小小的手机屏幕分辨率往往比一台商场广告机的分辨率还高，所以我们在手机上看到画面会更加细腻。衡量这个指标的参数是 PPI（Pixels Per Inch），即每英寸所拥有的像素数目，显然手机的 PPI 值远高于广告机的 PPI 值。</p>\n<h2 id=\"拼装组件\"><a class=\"markdownIt-Anchor\" href=\"#拼装组件\">#</a> 拼装组件</h2>\n<p>了解了像素、分辨率、屏幕尺寸等概念，我们就可以开始设计第一个 GUI 应用程序啦！接下来要完成的应用程序效果图如下所示，我已经把元素的位置信息标注出来了。</p>\n<p><img data-src=\"/images/coding/%E7%AC%AC%E4%B8%80%E4%B8%AAGUI%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F-%E6%A0%87%E6%B3%A8.png\" alt=\"\"></p>\n<p>这个应用程序很简单，只包含两个可视化元素，一个是 “数字” 标签，另一个是按钮。外围的窗口框是操作系统提供的，不同系统的显示风格略有不同，最上面的那栏被称为标题栏，通常包含一些控制按钮，比如最小化、最大化、关闭等等，这里还写上了 “你的第一个 GUI 应用程序” 的标题，这样可以与其他应用程序区分开来。</p>\n<p>需要注意的是，窗口的像素原点位于左上角（不包含窗口框），这个窗口的宽度是 400px，高度是 300px（px 是像素单位）。</p>\n<p>在前面的代码基础上增加一些代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> wx</span><br><span class=\"line\">app = wx.App()</span><br><span class=\"line\">win = wx.Frame(<span class=\"literal\">None</span>, title=<span class=\"string\">&quot;翻牌子&quot;</span>, size=(<span class=\"number\">400</span>, <span class=\"number\">300</span>))</span><br><span class=\"line\">numText = wx.StaticText(win, label=<span class=\"string\">&quot;Who?&quot;</span>)</span><br><span class=\"line\">startBtn = wx.Button(win, label=<span class=\"string\">&quot;点名&quot;</span>)</span><br><span class=\"line\">win.Show()</span><br><span class=\"line\">app.MainLoop()</span><br></pre></td></tr></table></figure>\n<p>代码说明：</p>\n<ul>\n<li>第三行代码为  <code>wx.Frame</code>  函数增加两个参数，其中 title 是该窗口的标题，size 是窗口大小。</li>\n<li>第四行代码创建一个静态文本，第一个参数表示这个文本属于 win 对象，第二个参数表示显示的内容是 “Who?”。</li>\n<li>第五行代码创建一个按钮，第一个参数表示这个按钮属于 win 对象，第二个参数表示按钮上的文字是 “点名”。</li>\n<li>其他代码跟之前的一样。</li>\n</ul>\n<p>执行  <code>python3 lottery.py</code>  可以看到如下窗口，可是，“Who?” 去哪里啦？</p>\n<p><img data-src=\"/images/coding/%E7%BF%BB%E7%89%8C%E5%AD%90-%E5%88%9B%E5%BB%BA%E5%85%83%E7%B4%A0.png\" alt=\"\"></p>\n<p>静态文本 “Who?” 其实是被按钮遮盖了，因为我们没有指定它们的位置，默认都放在左上角的原点上。所以我们要按照前面的尺寸标注设置它们的大小和位置，修改第四、第五行代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">numText = wx.StaticText(win, label=<span class=\"string\">&quot;Who?&quot;</span>, size=(<span class=\"number\">400</span>, <span class=\"number\">150</span>), pos=(<span class=\"number\">0</span>, <span class=\"number\">50</span>), style=wx.ALIGN_CENTER)</span><br><span class=\"line\">startBtn = wx.Button(win, label=<span class=\"string\">&quot;点名&quot;</span>, size=(<span class=\"number\">100</span>, <span class=\"number\">50</span>), pos=(<span class=\"number\">150</span>, <span class=\"number\">200</span>))</span><br></pre></td></tr></table></figure>\n<p>代码说明：</p>\n<ul>\n<li>参数 size 设置元素的大小，pos 设置元素的位置。</li>\n<li><code>style=wx.ALIGN_CENTER</code>  用于使静态文本居中。</li>\n</ul>\n<p><img data-src=\"/images/coding/%E7%BF%BB%E7%89%8C%E5%AD%90-%E8%B0%83%E6%95%B4%E4%BD%8D%E7%BD%AE.png\" alt=\"\"></p>\n<p>唔～ 怎么那么小</p>\n<p><img data-src=\"/images/coding/%E7%9C%8B%E6%88%91%E7%9A%84%E5%B0%8F%E7%9C%BC%E7%A5%9E%E8%A1%8C%E4%BA%8B.jpeg\" alt=\"\"></p>\n<p>加点代码吧，在  <code>numText = wx.StaticText...</code>  那行后面加入如下几行代码，用于调整字体大小和粗细。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">font = numText.GetFont()</span><br><span class=\"line\">font.PointSize += <span class=\"number\">60</span></span><br><span class=\"line\">font = font.Bold()</span><br><span class=\"line\">numText.SetFont(font)</span><br></pre></td></tr></table></figure>\n<p>再次运行，完美！</p>\n<p><img data-src=\"/images/coding/%E7%BF%BB%E7%89%8C%E5%AD%90-%E5%A4%A7%E5%AD%97%E4%BD%93.png\" alt=\"\"></p>\n<h2 id=\"事件处理\"><a class=\"markdownIt-Anchor\" href=\"#事件处理\">#</a> 事件处理</h2>\n<p>但是现在你使劲点击按钮也是没有用的，因为我们还没有绑定事件。</p>\n<p>还记得这句代码吗？</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.MainLoop()</span><br></pre></td></tr></table></figure>\n<p>它会让程序进入事件循环，等待事件触发，比如我们单击按钮、双击按钮、触碰按钮等等都是事件。图形界面程序和我们前面写的程序不太一样，因为图形界面通常都在等用户触发事件来决定接下来要做什么。</p>\n<p>下面我们来为 “点名” 按钮绑定事件，并定义触发事件后该做的事情。</p>\n<p>在  <code>startBtn = wx.Button...</code>  后面加入这行代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">startBtn.Bind(wx.EVT_BUTTON, lottery)</span><br></pre></td></tr></table></figure>\n<p>用于绑定按钮点击事件，触发后执行 lottery 函数。因此我们还要在前面定义 lottery 函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lottery</span>(<span class=\"params\">event</span>):</span></span><br><span class=\"line\">\twho = random.randint(<span class=\"number\">1</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">\tnumText.SetLabel(<span class=\"built_in\">str</span>(who)) </span><br></pre></td></tr></table></figure>\n<p>这个函数的作用是假设你们班上有 50 位同学，编号从 1~50，然后从这里面随机抽一个数字，再将这个数字显示到静态文本的位置。</p>\n<p>因为使用了随机数函数，所以别忘导入 random 模块，完整的代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> wx</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 事件处理函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lottery</span>(<span class=\"params\">event</span>):</span></span><br><span class=\"line\">\twho = random.randint(<span class=\"number\">1</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">\tnumText.SetLabel(<span class=\"built_in\">str</span>(who)) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建应用程序对象</span></span><br><span class=\"line\">app = wx.App()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个窗口</span></span><br><span class=\"line\">win = wx.Frame(<span class=\"literal\">None</span>, title=<span class=\"string\">&quot;翻牌子&quot;</span>, size=(<span class=\"number\">400</span>, <span class=\"number\">300</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 待会显示数字的文本</span></span><br><span class=\"line\">numText = wx.StaticText(win, label=<span class=\"string\">&quot;Who?&quot;</span>, size=(<span class=\"number\">400</span>, <span class=\"number\">150</span>), pos=(<span class=\"number\">0</span>, <span class=\"number\">50</span>), style=wx.ALIGN_CENTER)</span><br><span class=\"line\">font = numText.GetFont()</span><br><span class=\"line\">font.PointSize += <span class=\"number\">60</span></span><br><span class=\"line\">font = font.Bold()</span><br><span class=\"line\">numText.SetFont(font)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># “点名”按钮</span></span><br><span class=\"line\">startBtn = wx.Button(win, label=<span class=\"string\">&quot;点名&quot;</span>, size=(<span class=\"number\">100</span>, <span class=\"number\">50</span>), pos=(<span class=\"number\">150</span>, <span class=\"number\">200</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绑定按钮点击事件</span></span><br><span class=\"line\">startBtn.Bind(wx.EVT_BUTTON, lottery)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置窗口可见</span></span><br><span class=\"line\">win.Show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入应用程序事件主循环</span></span><br><span class=\"line\">app.MainLoop()</span><br></pre></td></tr></table></figure>\n<p>今天的代码比较长，为了方便阅读，我加上了一些注释，也就是以  <code>#</code>  号开始的行。注释是给我们人类看的，程序执行的时候会忽略掉。</p>\n<h2 id=\"开始点名\"><a class=\"markdownIt-Anchor\" href=\"#开始点名\">#</a> 开始点名</h2>\n<p>好啦，一切就绪。执行  <code>python3 lottery.py</code>  看看翻到谁的牌子吧～</p>\n<p><img data-src=\"/images/coding/%E7%BF%BB%E7%89%8C%E5%AD%90-who.png\" alt=\"\"></p>\n<p>点名</p>\n<p><img data-src=\"/images/coding/%E7%BF%BB%E7%89%8C%E5%AD%90-34.png\" alt=\"\"></p>\n<p>再点</p>\n<p><img data-src=\"/images/coding/%E7%BF%BB%E7%89%8C%E5%AD%90-1.png\" alt=\"\"></p>\n<p>下一个</p>\n<p><img data-src=\"/images/coding/%E7%BF%BB%E7%89%8C%E5%AD%90-26.png\" alt=\"\"></p>\n<p>再下一个</p>\n<p><img data-src=\"/images/coding/%E7%BF%BB%E7%89%8C%E5%AD%90-49.png\" alt=\"\"></p>\n<p>额… 总是被动也不行，遇到合适的还是主动举手吧！</p>\n<p><img data-src=\"/images/coding/%E8%BF%99%E9%A2%98%E6%88%91%E4%BC%9A.jpg\" alt=\"\"></p>\n<h2 id=\"飞机大战\"><a class=\"markdownIt-Anchor\" href=\"#飞机大战\">#</a> 飞机大战</h2>\n<p>最后，我们还一起看了 “飞机大战” 的 Demo 代码，源代码放在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vbHVodWFkb25nL1B5dGhvbl9MZWFybmluZy90cmVlL21hc3Rlci8ybmRfd2Vlay9ob21ld29yay9haXJjcmFmdF93YXI=\">这里</span>。</p>\n<p>运行效果如下：</p>\n<p><img data-src=\"/images/coding/%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98.png\" alt=\"\"></p>\n<p>我们还看了怎么更换飞机的图片、怎么增加背景音乐、怎么修改子弹速度… 通过这次体验，你应该了解了游戏的本质 —— 就是按游戏规则堆叠图片和切换画面。</p>\n<p>游戏也好，小说也罢，我们可以玩可以看，但不要过度，不要沉迷于虚拟世界。好好生活，现实世界比虚拟世界有趣多了！</p>\n<h2 id=\"作业\"><a class=\"markdownIt-Anchor\" href=\"#作业\">#</a> 作业</h2>\n<p>（1）理解像素、分辨率、屏幕尺寸等概念。</p>\n<p>（2）用手机拍一些照片，看看能否从这些照片的像素大小计算出对应的存储大小。</p>\n<p>（3）理解 GUI 应用程序中事件的概念。</p>\n<p>（4）根据示例，自己动手编写并运行程序。</p>\n",
            "tags": [
                "Python",
                "教孩子学编程"
            ]
        },
        {
            "id": "https://luhuadong.com/coding/PyTK-2019-Day08.html",
            "url": "https://luhuadong.com/coding/PyTK-2019-Day08.html",
            "title": "【教孩子学编程】第8天 还记得大明湖畔的变量和函数吗",
            "date_published": "2019-02-10T02:53:27.000Z",
            "content_html": "<p><img data-src=\"/images/coding/%E9%9A%8F%E6%97%B6%E5%90%AF%E7%A8%8B.jpg\" alt=\"\"></p>\n<p>不知不觉，我们已经一起写了好几个程序了。在编写程序的时候，很抱歉有些东西我刻意隐瞒了，因此今天我要停下来，给你讲讲当年大明湖畔的夏… 呸，变量和函数！</p>\n<h2 id=\"二元一次方程\"><a class=\"markdownIt-Anchor\" href=\"#二元一次方程\">#</a> 二元一次方程</h2>\n<p>我们知道温度的单位有摄氏度和华氏度，它们之间的关系是：</p>\n<p>F = C × 1.8 + 32</p>\n<p>其中，F 表示华氏温度，C 表示摄氏温度。</p>\n<p><img data-src=\"/images/coding/%E6%91%84%E6%B0%8F-%E5%8D%8E%E6%B0%8F.jpeg\" alt=\"\"></p>\n<p>为了看起来舒服点，我们用 x 替换 C，用 y 替换 F。于是得到  <code>y = 1.8x + 32</code>  这样一个二元一次方程。</p>\n<p>我们可以简写为函数关系式  <code>y = f(x)</code></p>\n<p>其中 x 是自变量，y 是因变量，此式表示 y 随 x 的变化而变化。而如何变化的秘密就藏在函数  <code>f()</code> ，在这里也就是  <code>y = 1.8x + 32</code>  的关系。</p>\n<p>所以，我们可以把自变量看成 “原因”，因变量看成 “结果”，函数看成是它们之间的 “关系”。</p>\n<p><img data-src=\"/images/coding/CF%E4%BA%8C%E5%85%83%E4%B8%80%E6%AC%A1%E6%96%B9%E7%A8%8B.png\" alt=\"\"></p>\n<p>以上是数学上关于变量和函数的概念，计算机编程中变量和函数的概念也类似，但多了一些扩展。</p>\n<p>同样是函数表达式  <code>y = f(x)</code>  ，自变量 x 在程序中称为 “输入”，因变量 y 在程序中称为 “输出”。函数  <code>f()</code>  是中间处理过程，我们可以把它当成黑箱子，对于函数的使用者来说，通常只关心 “输入什么，就会输出什么” 的问题。</p>\n<p><img data-src=\"/images/coding/%E9%BB%91%E7%AE%B1%E5%AD%90.png\" alt=\"\"></p>\n<p>在程序设计中，自变量 x 也被称为 “参数”，因变量 y 则被称为 “返回值”。因此你可能会听到这样的描述：传入了参数 x，调用了函数 f ()，返回了结果 y。</p>\n<h2 id=\"你的第一个python函数\"><a class=\"markdownIt-Anchor\" href=\"#你的第一个python函数\">#</a> 你的第一个 Python 函数</h2>\n<p>我们用之前学的编程知识来实现摄氏温度和华氏温度的转换：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入摄氏温度值：&quot;</span>))</span><br><span class=\"line\">y = <span class=\"number\">1.8</span> * x + <span class=\"number\">32</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;对应的华氏温度值为：&quot;</span>, y)</span><br></pre></td></tr></table></figure>\n<p>第一行中的 float () 函数表示将输入的数值转换为浮点数（也就是小数）。</p>\n<p>接下来，我们用函数来实现：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f</span>(<span class=\"params\">Ce</span>):</span></span><br><span class=\"line\">    F = <span class=\"number\">1.8</span> * Ce + <span class=\"number\">32</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> F</span><br><span class=\"line\"></span><br><span class=\"line\">x = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入摄氏温度值：&quot;</span>))</span><br><span class=\"line\">y = f(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;对应的华氏温度值为：&quot;</span>, y)</span><br></pre></td></tr></table></figure>\n<p>前三行就是函数的实现，Python 中的函数使用 def 来标识（def 是 define 的缩写），这个函数的功能是接收一个参数 Ce，经过转换得到 F，并将 F 返回给使用者。</p>\n<p>在看看倒数第二行，是不是很熟悉？这不就是前面的函数表达式  <code>y = f(x)</code>  吗？在程序中，我们称为函数的调用，函数内部转换后的 F 就会传递给变量 y。</p>\n<p>当然，函数的名字不总是叫 f，我们通常会根据函数的功能取一个恰当的名字。比如这个温度转换函数可以取名为 temp_convert 或者 Ce2F。</p>\n<h2 id=\"ipo-编程模型\"><a class=\"markdownIt-Anchor\" href=\"#ipo-编程模型\">#</a> IPO 编程模型</h2>\n<p>还有点时间，再来讲一下 IPO 编程模型。IPO 模型是程序的基本编写方法，IPO 三个字母的含义如下：</p>\n<ul>\n<li><code>I</code> ：Input 输入，程序的输入。</li>\n<li><code>P</code> ：Process 处理，程序的主要逻辑。</li>\n<li><code>O</code> ：Output 输出，程序的输出。</li>\n</ul>\n<p>IPO 方法讲解的是，在编写程序的时候，我们要关注输入是什么，输出是什么，如何从输入达到输出。</p>\n<p><img data-src=\"/images/coding/IPO%E7%BC%96%E7%A8%8B%E6%A8%A1%E5%9E%8B.png\" alt=\"\"></p>\n<p>程序的输入：文件输入、网络输入、控制台输入、交互界面输入、内部参数输入等。输入是一个程序的开始</p>\n<p>程序的输出：控制台输出、图形输出、文件输出、网络输出、操作系统内部变量输出等。输出是程序展示运算结果的方式。</p>\n<p>程序处理：程序对输入数据进行计算产生输出结果的过程。处理方法统称为算法，它是程序最重要的部分。<strong>算法是一个程序的灵魂</strong>。</p>\n<p>一个程序可以有零个或多个输入，至少一个或多个输出。没有输出的程序是没有意义的。</p>\n<p><img data-src=\"/images/coding/%E4%BA%BA%E7%94%9FIPO%E6%A8%A1%E5%9E%8B.jpeg\" alt=\"\"></p>\n<p>进一步抽象，你会发现，这种 IPO 模型同样适用于我们人本身。每个人的人生都是 <strong>获取信息输入 - 大脑处理 - 总结输出</strong> 的一个过程。</p>\n<p>比如当你面对考试时，考试成绩就是你的输出，平时的学习积累就是你的输入。比如对于现在的我来说，写东西就是最终的输出，输入就是我前面的经验<s>和瞎想</s>。</p>\n<p>其实每件事都一样，最终的结果无外乎就是看 “有什么输入” 和 “怎样处理”。</p>\n<p>如果你感觉迷茫，难以输出，也许是因为输入不够。这时候就要多读书多看报，少吃零食多睡觉！</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Quality input ensures quality output</span><br></pre></td></tr></table></figure>\n<p>同时，我们人类的大脑处理方式有无数多种，每个人要理解这个世界，都需要自己找到底层的思维模型。通过建立思维模型，形成自己独特、高效的处理方法。</p>\n<p><img data-src=\"/images/coding/%E8%AF%BB%E4%B9%A6%E5%A4%AA%E5%B0%91%E6%83%B3%E5%BE%97%E5%A4%AA%E5%A4%9A.gif\" alt=\"\"></p>\n<h2 id=\"编程解决问题的步骤\"><a class=\"markdownIt-Anchor\" href=\"#编程解决问题的步骤\">#</a> 编程解决问题的步骤</h2>\n<ol>\n<li>分析问题：分析问题的计算部分（想清楚）</li>\n<li>划分边界：划分问题的功能边界（规划 IPO）</li>\n<li>设计算法：设计问题的求解算法（关注算法）</li>\n<li>编写程序：编写问题的计算程序（编程序）</li>\n<li>调试测试：调试程序使正确运行（运行调试）</li>\n<li>升级维护：适应问题的升级维护（更新完善）</li>\n</ol>\n<p>精简步骤</p>\n<ul>\n<li>确定 IPO：明确计算部分及功能边界</li>\n<li>编写程序：将计算求解的设计变成现实</li>\n<li>调试程序：确保程序按照正确逻辑能够正确运行</li>\n</ul>\n<h2 id=\"程序是如何运行的\"><a class=\"markdownIt-Anchor\" href=\"#程序是如何运行的\">#</a> 程序是如何运行的</h2>\n<p>Python 是一门解释型语言。额… 怎么说呢，虽然电脑是我们的好朋友，但是我们和电脑其实很难沟通，比如我们要吃饭才有力气学习，电脑居然不用吃饭。所以就很难玩到一起去，但是我们又想和电脑沟通，让她帮我们做点事情，那怎么办？</p>\n<p>那就用 Python 呀！Python 解释器就像一个翻译专家，我们把脑海中的想法和意图用 Python 语言写出了，然后交给 Python 解释器。她就会将帮我们检查并翻译成电脑看得懂的语言，之后电脑就会执行相应的操作，比如数字计算、字符打印等等。</p>\n<h2 id=\"作业\"><a class=\"markdownIt-Anchor\" href=\"#作业\">#</a> 作业</h2>\n<p>（1）自己动手用函数的方式实现摄氏度和华氏度的转换程序。</p>\n<p>（2）找一找到目前为止我们一共用过多少个函数。</p>\n<p>（3）理解 IPO 编程模型。</p>\n<h2 id=\"详细讲解如何实现温度转换\"><a class=\"markdownIt-Anchor\" href=\"#详细讲解如何实现温度转换\">#</a> 详细讲解如何实现温度转换</h2>\n<p>提出问题。</p>\n<h3 id=\"ipo-分析法\"><a class=\"markdownIt-Anchor\" href=\"#ipo-分析法\">#</a> IPO 分析法</h3>\n<p>划分边界</p>\n<ul>\n<li>输入：带华氏或摄氏标志的温度值</li>\n<li>处理：根据温度标志选择适当的温度转换算法</li>\n<li>输出：带摄氏或华氏标志的温度值</li>\n</ul>\n<p>输入输出格式要求：标识放在温度值的后面，F 表示华氏度，C 表示摄氏度。</p>\n<p>比如：82F 表示华氏 82 度，28C 表示摄氏 28 度。</p>\n<h3 id=\"设计算法\"><a class=\"markdownIt-Anchor\" href=\"#设计算法\">#</a> 设计算法</h3>\n<p>根据华氏和摄氏温度的定义，可得如下转换公式：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>C</mi><mo>=</mo><mfrac><mrow><mi>F</mi><mo>−</mo><mn>32</mn></mrow><mn>1.8</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">{C = \\frac{F - 32}{1.8}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.04633em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">.</span><span class=\"mord\">8</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">3</span><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>F</mi><mo>=</mo><mi>C</mi><mo>×</mo><mn>1.8</mn><mo>+</mo><mn>32</mn></mrow><annotation encoding=\"application/x-tex\">{F = C \\times 1.8 + 32}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mord\">.</span><span class=\"mord\">8</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">3</span><span class=\"mord\">2</span></span></span></span></span></span></p>\n<p>其中，C 表示摄氏温度，F 表示华氏温度。</p>\n<h3 id=\"判断键盘输入的是否为数字\"><a class=\"markdownIt-Anchor\" href=\"#判断键盘输入的是否为数字\">#</a> 判断键盘输入的是否为数字</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入一个数字：&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> </span><br></pre></td></tr></table></figure>\n<h3 id=\"将代码写到文件中\"><a class=\"markdownIt-Anchor\" href=\"#将代码写到文件中\">#</a> 将代码写到文件中</h3>\n<p>简单点：输入摄氏温度，输出华氏温度</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"> 文件：Ce2F.py</span></span><br><span class=\"line\"><span class=\"string\"> 描述：将摄氏温度转换为华氏温度</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">C = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入摄氏温度值：&quot;</span>)</span><br><span class=\"line\">F = <span class=\"number\">1.8</span> * <span class=\"built_in\">float</span>(C) + <span class=\"number\">32</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;对应的华氏温度为：&#123;:.2f&#125;&quot;</span>.<span class=\"built_in\">format</span>(F))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"> 文件：TempConvert.py</span></span><br><span class=\"line\"><span class=\"string\"> 描述：实现华氏和摄氏温度的转换</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">TempStr = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入带有符号的温度值：&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> TempStr[-<span class=\"number\">1</span>] <span class=\"keyword\">in</span> [<span class=\"string\">&#x27;F&#x27;</span>, <span class=\"string\">&#x27;f&#x27;</span>]:</span><br><span class=\"line\">    C = (<span class=\"built_in\">eval</span>(TempStr[<span class=\"number\">0</span>:-<span class=\"number\">1</span>]) - <span class=\"number\">32</span>)/<span class=\"number\">1.8</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;转换后的温度是 &#123;:.2f&#125;C&quot;</span>.<span class=\"built_in\">format</span>(C))</span><br><span class=\"line\"><span class=\"keyword\">elif</span> TempStr[-<span class=\"number\">1</span>] <span class=\"keyword\">in</span> [<span class=\"string\">&#x27;C&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>]:</span><br><span class=\"line\">    F = <span class=\"number\">1.8</span> * <span class=\"built_in\">eval</span>(TempStr[<span class=\"number\">0</span>:-<span class=\"number\">1</span>]) + <span class=\"number\">32</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;转换后的温度是 &#123;:.2f&#125;F&quot;</span>.<span class=\"built_in\">format</span>(F))</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输入格式错误&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"运行-python-程序\"><a class=\"markdownIt-Anchor\" href=\"#运行-python-程序\">#</a> 运行 Python 程序</h3>\n<h3 id=\"代码说明\"><a class=\"markdownIt-Anchor\" href=\"#代码说明\">#</a> 代码说明</h3>\n<ul>\n<li>我们在编辑器中输入代码，发现代码会呈现不同的颜色，这种效果称为<strong>代码高亮</strong>，目的让我们看得舒服点。代码高亮是编程的色彩辅助体系，不是语法要求，因此在不同的编辑器中，代码高亮的表现形式各有不同。</li>\n<li><strong>缩进</strong>是一行代码开始前的空白区域，表达程序的格式框架\n<ul>\n<li>严格明确：缩进是语法的一部分，缩进不正确程序运行错误</li>\n<li>所属关系：表达代码间包含和层次关系的唯一手段</li>\n<li>长度一致：程序内一致即可，一般用 4 个空格或 1 个 Tab</li>\n</ul>\n</li>\n<li><strong>注释</strong>是提高程序可读性的方式，注释是不被程序执行的辅助性说明信息\n<ul>\n<li>单行注释：以  <code>#</code>  开头，其后内容为注释</li>\n<li>多行注释：以  <code>'''</code>  开头和结尾</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "Python",
                "教孩子学编程"
            ]
        },
        {
            "id": "https://luhuadong.com/coding/PyTK-2019-Day07.html",
            "url": "https://luhuadong.com/coding/PyTK-2019-Day07.html",
            "title": "【教孩子学编程】第7天 和电脑玩猜数字游戏",
            "date_published": "2019-02-09T02:53:27.000Z",
            "content_html": "<p><img data-src=\"/images/coding/%E5%92%95%E5%99%9C.png\" alt=\"\"></p>\n<p>猜数字（又称 Bulls and Cows ）是一种古老的的密码破译类益智类小游戏，起源于 20 世纪中期，一般由两个人或多人玩，也可以由一个人和电脑玩。今天我们就来用 Python 写一个猜数字游戏！</p>\n<h2 id=\"游戏规则\"><a class=\"markdownIt-Anchor\" href=\"#游戏规则\">#</a> 游戏规则</h2>\n<ul>\n<li>一个玩家从 1~10（或者 1~100）之间选取一个随机数；</li>\n<li>另一个玩家尝试猜这个数字，如果猜的数太大则提示 “小了”，如果猜的数太小则提示 “大了”，直到猜对为止；</li>\n<li>谁猜的次数最少，谁就获胜。</li>\n</ul>\n<p><img data-src=\"/images/coding/Bulls_and_Cows.jpg\" alt=\"\"></p>\n<p>为了实现这个游戏，我们需要解决两个问题：</p>\n<ol>\n<li>如何生成一个随机数？</li>\n<li>如何实现分支结构的控制流程？</li>\n</ol>\n<h2 id=\"生成随机数\"><a class=\"markdownIt-Anchor\" href=\"#生成随机数\">#</a> 生成随机数</h2>\n<p>Python 已经为我们准备好了 random 模块，使用它可以很方便地生成随机数。暂时先不用管模块是什么，我们先把它用起来！</p>\n<p>在 Python 交互式环境中逐行输入以下代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\">random.randint(<span class=\"number\">1</span>, <span class=\"number\">10</span>)</span><br></pre></td></tr></table></figure>\n<p>第一行代码使用 import 命令导入 random 模块；第二行代码使用 random 模块中的  <code>randint()</code>  函数（它是 random integer 的缩写，表示随机的整数），生成一个 1~10 之间的随机数。</p>\n<p><img data-src=\"/images/coding/%E6%91%87%E9%AA%B0%E5%AD%90.gif\" alt=\"\"></p>\n<p>重复运行多次  <code>random.randint(1, 10)</code>  看看是否出现不同的随机数。（ <code>import random</code>  在程序中只需要执行一次即可）</p>\n<p><img data-src=\"/images/coding/%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E6%95%B0.png\" alt=\"\"></p>\n<h2 id=\"分支结构\"><a class=\"markdownIt-Anchor\" href=\"#分支结构\">#</a> 分支结构</h2>\n<p>现实生活有很多 “分支” 情况，比如家里的水管分支。</p>\n<p><img data-src=\"/images/coding/%E6%B0%B4%E7%AE%A1%E5%88%86%E6%94%AF.jpg\" alt=\"\"></p>\n<p>物种进化的分支结构促进了生物多样性。</p>\n<p><img data-src=\"/images/coding/%E7%94%9F%E7%89%A9%E8%BF%9B%E5%8C%96%E8%B0%B1%E7%B3%BB%E5%9B%BE.jpeg\" alt=\"\"></p>\n<p>同样，在程序的世界里，分支结构也无处不在，通过分支的组合，可以编写出很多有趣的程序。通常，分支结构通过条件判断来实现。</p>\n<p>根据判断的情况，又可分为单项分支、双项分支、多项分支。三种结构的伪代码如下：</p>\n<h3 id=\"单项分支\"><a class=\"markdownIt-Anchor\" href=\"#单项分支\">#</a> 单项分支</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> 条件:</span><br><span class=\"line\">    <span class=\"comment\">#执行的内容...</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"双项分支\"><a class=\"markdownIt-Anchor\" href=\"#双项分支\">#</a> 双项分支</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> 条件:</span><br><span class=\"line\">    <span class=\"comment\">#执行的内容...</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"comment\">#执行的内容...</span></span><br></pre></td></tr></table></figure>\n<p>单项分支和双项分支就像开关一样，要么开，要么关。只不过单项分支只关心其中一种情况，双项分支两种情况都关心。</p>\n<p><img data-src=\"/images/coding/%E5%BC%80%E5%85%B32.jpg\" alt=\"\"></p>\n<h3 id=\"多项分支\"><a class=\"markdownIt-Anchor\" href=\"#多项分支\">#</a> 多项分支</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> 条件:</span><br><span class=\"line\">    <span class=\"comment\">#执行的内容...</span></span><br><span class=\"line\"><span class=\"keyword\">elif</span> 条件:</span><br><span class=\"line\">    <span class=\"comment\">#执行的内容...</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"comment\">#执行的内容...</span></span><br></pre></td></tr></table></figure>\n<p>多项分支中可以有很多个  <code>elif</code>  分支。就像风扇开关那样，有不同的档位，每个档位都有不同的处理方式。</p>\n<p><img data-src=\"/images/coding/%E9%A3%8E%E6%89%87%E5%BC%80%E5%85%B3.jpg\" alt=\"\"></p>\n<p>说明：</p>\n<ul>\n<li>分支结构的条件判断顺序是自上而下逐个分支进行判断的；</li>\n<li>在分支结构中，无论如何只会执行一个分支；</li>\n<li>当执行完一个分之后，分支结构就会结束，后面的分支是不会执行的。</li>\n</ul>\n<h2 id=\"猜数字游戏\"><a class=\"markdownIt-Anchor\" href=\"#猜数字游戏\">#</a> 猜数字游戏</h2>\n<p>有了前面的知识背景，我们就可以撸起袖子写代码了。</p>\n<p><img data-src=\"/images/coding/%E4%BF%9D%E4%BD%91%E4%BB%A3%E7%A0%81%E6%B2%A1%E6%9C%89bug.png\" alt=\"\"></p>\n<p>打开编辑器，输入下面代码，并保存为 <span class=\"exturl\" data-url=\"aHR0cDovL2d1ZXNzLnB5\">guess.py</span> 文件。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\">target = random.randint(<span class=\"number\">1</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">guess = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;1~10之间猜一个数字：&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> guess != target:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> guess &gt; target:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(guess, <span class=\"string\">&quot;太大了&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> guess &lt; target:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(guess, <span class=\"string\">&quot;太小了&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    guess = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;再猜一遍：&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;猜对了！&#123;&#125; 是正确的数字&quot;</span>.<span class=\"built_in\">format</span>(guess))</span><br></pre></td></tr></table></figure>\n<p>执行  <code>python3 guess.py </code>  看看运行效果吧～</p>\n<p><img data-src=\"/images/coding/%E7%8C%9C%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F%E7%BB%93%E6%9E%9C.png\" alt=\"\"></p>\n<h2 id=\"代码说明\"><a class=\"markdownIt-Anchor\" href=\"#代码说明\">#</a> 代码说明</h2>\n<ul>\n<li>第一行代码导入 random 模块，以便于待会可以使用 randint 函数生成一个随机整数。</li>\n<li>生成的随机整数存放在变量 target 中。</li>\n<li>玩家输入的数字存放在变量 guess 中。</li>\n<li>接下来，判断 guess 和 target 的大小。</li>\n</ul>\n<h2 id=\"作业\"><a class=\"markdownIt-Anchor\" href=\"#作业\">#</a> 作业</h2>\n<p>（1）自己动手写一遍猜数字游戏的代码。</p>\n<p>（2）运行猜数字游戏，想一想用什么策略可以猜得更快。</p>\n",
            "tags": [
                "Python",
                "教孩子学编程"
            ]
        },
        {
            "id": "https://luhuadong.com/coding/PyTK-2019-Day06.html",
            "url": "https://luhuadong.com/coding/PyTK-2019-Day06.html",
            "title": "【教孩子学编程】第6天 电脑也会九九乘法口诀",
            "date_published": "2019-02-08T02:53:27.000Z",
            "content_html": "<p><img data-src=\"/images/coding/%E6%A0%A1%E5%9B%AD%E8%AF%BE%E5%A0%82.jpg\" alt=\"\"></p>\n<p>上一节课我们写了第一个 Python 程序，并使用了输入和输出函数 —— input 和 print。今天我们将进一步学习输出函数 print 的用法，还会学习程序的控制流程，并在此基础上让电脑为我们打印出《九九乘法表》。</p>\n<h2 id=\"print-输出格式\"><a class=\"markdownIt-Anchor\" href=\"#print-输出格式\">#</a> print 输出格式</h2>\n<p>print 默认输出是换行的，如果不想换行，需要加上 end 参数来指定结束符，就像这样：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello World&quot;</span>, end=<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>前面我们通过这种方式打印一句话和你的名字：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;你好，请问你叫什么名字？&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;很高兴认识你，&quot;</span>, name)</span><br></pre></td></tr></table></figure>\n<p>今天我们会学习一种新的表达方式，我们暂时称呼它为 “字符串格式化输出”，上面这行代码就可以改写为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;你好，请问你叫什么名字？&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;很高兴认识你，&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(name))</span><br></pre></td></tr></table></figure>\n<p>字符串  <code>&quot;很高兴认识你，&#123;&#125;&quot;</code>  中的花括号是占位符，意思是等一下这里要打印其他内容，先占个位。至于填充什么内容，就由字符串后的  <code>.format()</code>  中的内容决定。</p>\n<p>如果还想让它喊你的名字三遍，就可以预留三个坑，然后在  <code>format</code>  中填充。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;你好，请问你叫什么名字？&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;很高兴认识你，&#123;&#125;, &#123;&#125;, &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(name, name, name))</span><br></pre></td></tr></table></figure>\n<p>我们可以给占位符编个号，表示这个坑使用  <code>format</code>  函数中的第几个参数。下面代码的执行效果与上面是一样的。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;你好，请问你叫什么名字？&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;很高兴认识你，&#123;0&#125;, &#123;1&#125;, &#123;2&#125;&quot;</span>.<span class=\"built_in\">format</span>(name, name, name))</span><br></pre></td></tr></table></figure>\n<p>也许你已经想到了， <code>name</code>  变量其实不需要写三遍，这样就行了！</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;你好，请问你叫什么名字？&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;很高兴认识你，&#123;0&#125;, &#123;0&#125;, &#123;0&#125;&quot;</span>.<span class=\"built_in\">format</span>(name))</span><br></pre></td></tr></table></figure>\n<p>除此之外，我们还可以为不同的坑指定不同的效果，比如左对齐、右对齐、居中。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;你好，请问你叫什么名字？&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;很高兴认识你，&#123;0:&lt;8&#125;, &#123;0:^8&#125;, &#123;0:&gt;8&#125;&quot;</span>.<span class=\"built_in\">format</span>(name))</span><br></pre></td></tr></table></figure>\n<p>执行效果如下：</p>\n<p><img data-src=\"/images/coding/print%E5%8D%A0%E4%BD%8D%E7%AC%A6%E6%93%8D%E4%BD%9C.png\" alt=\"\"></p>\n<p>占位符的序号和其需要的效果操作之间用冒号  <code>:</code>  隔开。 <code>&lt;</code>  表示左对齐（默认）， <code>&gt;</code>  表示右对齐， <code>^</code>  表示中间对齐。后面的数字 8 表示这里占了八个字符长度，你也可以改成你需要的长度。</p>\n<p>关于 print 的格式化输出，我们先了解到这里就可以了！</p>\n<p><img data-src=\"/images/coding/%E5%B0%8F%E5%8F%AF%E7%88%B1%E4%B8%80%E8%B5%B7%E8%B7%B3%E8%88%9E.gif\" alt=\"\"></p>\n<h2 id=\"循环语句\"><a class=\"markdownIt-Anchor\" href=\"#循环语句\">#</a> 循环语句</h2>\n<p>前面的代码都是顺序执行的，也就是执行完第一行，再执行第二行，直到最后一行结束。在程序中，我们还经常使用循环来让代码重复执行，先把下面的代码执行一遍看看。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>\n<p>没错，你会看到屏幕上打印出 0~9，一共十行数字。</p>\n<p>函数  <code>range(10)</code>  帮我们创建了 0~9 这十个数字，我们通过  <code>for ... in ...</code>  语句将这十个数字依次取出来，放在变量 x 中，然后再使用  <code>print</code>  函数把它们打印出来。</p>\n<p>需要注意的是，第二行代码有一些空白位置，这是因为按了 Tab 键。在你输入代码的时候，你使用的编辑器可能也已经帮你添加上了。这个空白叫做<strong>代码缩进</strong>，表示代码之间的从属关系，在这里就表示  <code>print(x)</code>  这行代码是在 for 循环中被执行的。</p>\n<p>range 函数默认从 0 开始，如果想从 1 开始，则可以使用两个参数，分别表示开始和结束。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(x)</span><br></pre></td></tr></table></figure>\n<p>循环是可以嵌套的，也就是说，一层循环中可以包括另一层循环，下一层循环中由可以包含下一层循环，但建议不要嵌套太多层，不然会晕的。。。</p>\n<p><img data-src=\"/images/coding/%E5%BE%AA%E7%8E%AF.gif\" alt=\"\"></p>\n<p>下面的代码中有两层循环，第一层循环 5 次，第二层循环 10 次。第 3 行的 print 语句属于第二层循环，第 4 行的 print 则属于第一层，可以看到代码缩进其实是在表达这种层次关系。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;*&quot;</span>, end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>执行代码，看看是不是打印出了 5 行 10 列的小星星。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* * * * * * * * * * </span><br><span class=\"line\">* * * * * * * * * * </span><br><span class=\"line\">* * * * * * * * * * </span><br><span class=\"line\">* * * * * * * * * * </span><br><span class=\"line\">* * * * * * * * * * </span><br></pre></td></tr></table></figure>\n<p>除了 for in 循环语句，在 Python 中我们还可以使用 while 循环语句。同样是打印 0~9 十个数字，使用 while 循环可以这样来写：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> x&lt;<span class=\"number\">10</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(x)</span><br><span class=\"line\">    x = x + <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>这里我们借助了 x 变量来记录当前的数字，紧跟 while 后面的是判断条件，比如这里的  <code>x&lt;10</code>  表示当 x 小于 10 的时候，执行循环中的代码。换句话说，就是当 x 大于等于 10，就跳出 while 循环，此时程序就结束了。</p>\n<p>同样，while 循环也可以嵌套，for in 循环和 while 循环之间也可以相互嵌套。</p>\n<h2 id=\"九九乘法表\"><a class=\"markdownIt-Anchor\" href=\"#九九乘法表\">#</a> 九九乘法表</h2>\n<p><img data-src=\"/images/coding/%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A81.jpeg\" alt=\"\"></p>\n<p>学习完前面的内容，我们已经完全有能力使用 Python 来打印一张<strong>九九乘法表</strong>啦！紧不紧张，兴不兴奋？</p>\n<p>你先想十分钟，想不出来再看看我下面给的代码。</p>\n<p><img data-src=\"/images/coding/%E5%B0%B1%E6%98%AF%E8%BF%99%E4%B9%88%E4%BB%BB%E6%80%A7.gif\" alt=\"\"></p>\n<p>这里使用 for in 循环来实现，打开编辑器输入如下代码，并保存为 <span class=\"exturl\" data-url=\"aHR0cDovLzk5VGFibGUucHk=\">99Table.py</span> 文件。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, i+<span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&#123;&#125;*&#123;&#125;=&#123;:&lt;3&#125;&quot;</span>.<span class=\"built_in\">format</span>(j,i,i*j), end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>在终端执行  <code>python3 99Table.py </code> ，看看小九九有没有打印出来。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1*1=1   </span><br><span class=\"line\">1*2=2   2*2=4   </span><br><span class=\"line\">1*3=3   2*3=6   3*3=9   </span><br><span class=\"line\">1*4=4   2*4=8   3*4=12  4*4=16  </span><br><span class=\"line\">1*5=5   2*5=10  3*5=15  4*5=20  5*5=25  </span><br><span class=\"line\">1*6=6   2*6=12  3*6=18  4*6=24  5*6=30  6*6=36  </span><br><span class=\"line\">1*7=7   2*7=14  3*7=21  4*7=28  5*7=35  6*7=42  7*7=49  </span><br><span class=\"line\">1*8=8   2*8=16  3*8=24  4*8=32  5*8=40  6*8=48  7*8=56  8*8=64  </span><br><span class=\"line\">1*9=9   2*9=18  3*9=27  4*9=36  5*9=45  6*9=54  7*9=63  8*9=72  9*9=81</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/coding/%E8%BE%93%E5%87%BA%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A8.png\" alt=\"\"></p>\n<h2 id=\"代码说明\"><a class=\"markdownIt-Anchor\" href=\"#代码说明\">#</a> 代码说明</h2>\n<ul>\n<li><strong>代码缩进</strong>是指一行代码开始前的空白区域，表达程序的格式框架，一个程序中可能会存在单行缩进或多行缩进。缩进是程序语法的一部分，需要严格明确；缩进表明了代码间的层次关系，缩进不正确会导致程序运行错误；通常使用 1 个 Tab 来缩进。</li>\n<li>九九乘法表可以看做一个九行九列的表格，因此使用两层循环可以很方便地实现。第一行代码表示变量 <code>i</code>  的值从 1 到 9 循环执行。</li>\n<li>因为九九乘法表的形状是三角形，也就是说内容是逐行增加的，所以第二行的循环范围从 1 开始，到 i+1 结束，随着第一层循环中 i 的变化，第二层循环中的长度也会发生变化。</li>\n<li>Python 中可以直接做数值运算，所以第三行代码使用  <code>i*j</code>  来得出乘法表中的各项结果，需要注意的是可能是输出的格式。</li>\n<li>第四行代码属于第一层循环，它的作用是每打印完一行就换一个新行。</li>\n</ul>\n<h2 id=\"作业\"><a class=\"markdownIt-Anchor\" href=\"#作业\">#</a> 作业</h2>\n<p>（1）自己动手练习一遍，看看能否输出九九乘法表。</p>\n<p>（2）调整九九乘法表的显示，让它看起来像这样：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1*9=9   2*9=18  3*9=27  4*9=36  5*9=45  6*9=54  7*9=63  8*9=72  9*9=81  </span><br><span class=\"line\">1*8=8   2*8=16  3*8=24  4*8=32  5*8=40  6*8=48  7*8=56  8*8=64  </span><br><span class=\"line\">1*7=7   2*7=14  3*7=21  4*7=28  5*7=35  6*7=42  7*7=49  </span><br><span class=\"line\">1*6=6   2*6=12  3*6=18  4*6=24  5*6=30  6*6=36  </span><br><span class=\"line\">1*5=5   2*5=10  3*5=15  4*5=20  5*5=25  </span><br><span class=\"line\">1*4=4   2*4=8   3*4=12  4*4=16  </span><br><span class=\"line\">1*3=3   2*3=6   3*3=9   </span><br><span class=\"line\">1*2=2   2*2=4   </span><br><span class=\"line\">1*1=1   </span><br></pre></td></tr></table></figure>\n<p>（3）尝试使用 while 循环语句来输出九九乘法表。</p>\n<p><img data-src=\"/images/coding/%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A82.jpeg\" alt=\"\"></p>\n<p>while 版本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i&lt;<span class=\"number\">10</span>:</span><br><span class=\"line\">    j=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> j&lt;i+<span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&#123;&#125;*&#123;&#125;=&#123;:&lt;3&#125;&quot;</span>.<span class=\"built_in\">format</span>(j,i,i*j), end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">        j=j+<span class=\"number\">1</span></span><br><span class=\"line\">    i=i+<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Python",
                "教孩子学编程"
            ]
        },
        {
            "id": "https://luhuadong.com/coding/PyTK-2019-Day05.html",
            "url": "https://luhuadong.com/coding/PyTK-2019-Day05.html",
            "title": "【教孩子学编程】第5天 你的第一个 Python 程序",
            "date_published": "2019-02-07T02:53:27.000Z",
            "content_html": "<p><img data-src=\"/images/coding/coding.png\" alt=\"\"></p>\n<p>今天终于开始写程序啦！在开始之前，我们先思考一下：程序是什么？程序能做什么？</p>\n<h2 id=\"编程是干什么的\"><a class=\"markdownIt-Anchor\" href=\"#编程是干什么的\">#</a> 编程是干什么的</h2>\n<p>编程是编写程序的中文简称，就是让计算机为解决某个问题而使用某种程序设计语言（比如我们使用的 Python）编写程序代码，并最终得到相应结果的过程。</p>\n<p>为了使计算机能够理解人的意图，人类就必须要将需解决的问题的思路、方法、和手段通过计算机能够理解的形式告诉计算机，使得计算机能够根据人的指令一步一步去工作，完成某种特定的任务。这种人和计算机之间交流的过程就是编程。</p>\n<p><img data-src=\"/images/coding/%E4%BF%AE%E7%94%B5%E8%84%91.jpeg\" alt=\"\"></p>\n<h2 id=\"python-交互式环境\"><a class=\"markdownIt-Anchor\" href=\"#python-交互式环境\">#</a> Python 交互式环境</h2>\n<p>如何启动 Python 的交互式环境</p>\n<ul>\n<li>如果是 Linux 系统，按 “Ctrl + Alt + T” 打开一个终端窗口，输入  <code>python3</code>  并按回车键；</li>\n<li>如果是 macOS 系统，在 Dock 中找到 Terminal 终端，启动终端并输入  <code>python3</code>  并按回车键；</li>\n<li>如果是 Windows 系统，在 “开始” 菜单中找到 Python IDLE，点击启动。</li>\n</ul>\n<p>启动交互式环境之后，屏幕上会显示一些版本信息，我们可以在提示符  <code>&gt;&gt;&gt;</code>  后直接输入代码，按回车就可以得到代码的执行结果。</p>\n<p>我们可以把它当成计算器使用，尝试输入并执行  <code>12 + 13</code> ，看看计算结果是否正确。</p>\n<p><img data-src=\"/images/coding/%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F.jpeg\" alt=\"\"></p>\n<p>很简单吧，任何有效的数学计算都可以在这里算出来呢！</p>\n<p>除了算数，我们也可以让 Python 在屏幕上打印出指定的文字，尝试输入并执行如下代码，看看会发生什么。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello World&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>这里的  <code>print</code>  是一个函数，括号中包含希望打印的文字，需要用单引号或者双引号括起来，但不能混用单引号和双引号。</p>\n<p>这种用单引号或者双引号括起来的文本在程序中叫 “字符串”，在后面的学习中，我们还会经常使用到！</p>\n<p><img data-src=\"/images/coding/%E7%AC%AC%E4%B8%80%E4%B8%AAPython%E7%A8%8B%E5%BA%8F.png\" alt=\"\"></p>\n<p>当代码执行完毕需要退出时，在  <code>&gt;&gt;&gt;</code>  提示符后输入  <code>quit()</code>  或者  <code>exit()</code>  即可。</p>\n<h2 id=\"用-python-打个招呼\"><a class=\"markdownIt-Anchor\" href=\"#用-python-打个招呼\">#</a> 用 Python 打个招呼</h2>\n<p>前面我们在交互式环境中执行了一些 Python 代码，更多的时候，我们会把 Python 代码先写到文件中，然后再执行。</p>\n<p><img data-src=\"/images/coding/%E9%86%92%E9%86%92-%E6%95%B2%E4%BB%A3%E7%A0%81%E4%BA%86.jpg\" alt=\"\"></p>\n<p>打开一个编辑器，输入如下代码，并保存为 <span class=\"exturl\" data-url=\"aHR0cDovL2dyZWV0LnB5\">greet.py</span> 文件。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;你好，请问你叫什么名字？&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;很高兴认识你，&quot;</span>, name)</span><br></pre></td></tr></table></figure>\n<p>回到终端，输入  <code>python3 greet.py</code>  ，按回车，即可执行这些 Python 代码。（注意：终端的当前工作目录路径要与文件保存的路径一致）</p>\n<p>这里的  <code>input</code>  是一个函数，程序执行时会先打印提示信息 “你好，请问你叫什么名字？”，并等待你的输入，当你输入名字并按回车后，你的名字会保存在  <code>name</code>  中，然后  <code>print</code>  函数会打印一段字符串和你打招呼。</p>\n<p>如果嫌电脑不够热情，我们可以让他多喊几次你的名字，将程序修改成这样：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;你好，请问你叫什么名字？&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;很高兴认识你，&quot;</span>, name, name, name)</span><br></pre></td></tr></table></figure>\n<p>保存文件，回到终端输入  <code>python3 greet.py</code>  按回车执行程序！</p>\n<p><img data-src=\"/images/coding/Python%E6%89%93%E6%8B%9B%E5%91%BC.png\" alt=\"\"></p>\n<p>好啦，不知不觉，你的第一个 Python 程序以及完成啦～</p>\n<p><img data-src=\"/images/coding/%E5%9B%9E%E6%9D%A5%E6%8A%8A%E4%BB%A3%E7%A0%81%E5%86%99%E5%AE%8C.jpg\" alt=\"\"></p>\n<h2 id=\"代码说明\"><a class=\"markdownIt-Anchor\" href=\"#代码说明\">#</a> 代码说明</h2>\n<ul>\n<li>我们在编辑器中输入代码，发现代码会呈现不同的颜色，这种效果称为<strong>代码高亮</strong>，目的让我们看得舒服点。代码高亮是编程的色彩辅助体系，不是语法要求，因此在不同的编辑器中，代码高亮的表现形式各有不同。</li>\n<li>第一行代码中的 name 被称为变量，变量在程序中用于保存数据，可以是字符串、数字等内容。</li>\n<li>input 函数会先打印提示信息，再等待键盘输入，按回车键表示输入结束，刚刚输入的内容就会存放到 name 变量中。</li>\n<li>print 函数可以带一个或多个参数，也就是括号中的字符串和变量 name，程序执行时将依次打印出来。</li>\n</ul>\n<h2 id=\"作业\"><a class=\"markdownIt-Anchor\" href=\"#作业\">#</a> 作业</h2>\n<p>（1）独立完成本节课的操作，你需要一个字母一个字母地把代码自己敲进去，不能使用 “复制 - 粘贴”。</p>\n<p>（2）把操作过程中出现的错误和疑问记录下来。</p>\n",
            "tags": [
                "Python",
                "教孩子学编程"
            ]
        },
        {
            "id": "https://luhuadong.com/coding/PyTK-2019-Day04.html",
            "url": "https://luhuadong.com/coding/PyTK-2019-Day04.html",
            "title": "【教孩子学编程】第4天 咿呀学语，Python常用英文单词",
            "date_published": "2019-02-06T02:53:27.000Z",
            "content_html": "<p><img data-src=\"/images/coding/%E8%B6%85%E8%B6%8A%E6%A2%A6%E6%83%B3%E4%B8%80%E8%B5%B7%E9%A3%9E.jpg\" alt=\"\"></p>\n<p>今天的任务比较简单，主要就是熟悉一些简单的英文单词。同时，为了在后面的编程学习中更容易理解，我还会引入两个基础概念 —— 与或非和二进制。这些概念虽然基础，但很重要。</p>\n<img data-src=\"/images/coding/我爱单词.jpeg\" width=\"200\" />\n<h2 id=\"单词列表\"><a class=\"markdownIt-Anchor\" href=\"#单词列表\">#</a> 单词列表</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">序号</th>\n<th style=\"text-align:center\">单词</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">append</td>\n<td>附加</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">argument</td>\n<td>参数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">and</td>\n<td>与，和</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">as</td>\n<td>作为，以… 身份</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">assert</td>\n<td>断言</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">background</td>\n<td>背景</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">binary</td>\n<td>二进制，通常用简写 bin</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">break</td>\n<td>中断</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\">character</td>\n<td>字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">color</td>\n<td>颜色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">code</td>\n<td>码（比如二维码是 QR-Code），代码</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">12</td>\n<td style=\"text-align:center\">control</td>\n<td>控制</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">13</td>\n<td style=\"text-align:center\">class</td>\n<td>类，种类</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">14</td>\n<td style=\"text-align:center\">continue</td>\n<td>继续</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">15</td>\n<td style=\"text-align:center\">define</td>\n<td>定义，关键字 def</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">16</td>\n<td style=\"text-align:center\">decimal</td>\n<td>十进制，通常用简写 dec</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">17</td>\n<td style=\"text-align:center\">delete</td>\n<td>删除，关键字 del</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">18</td>\n<td style=\"text-align:center\">error</td>\n<td>错误</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">19</td>\n<td style=\"text-align:center\">else</td>\n<td>否则</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">20</td>\n<td style=\"text-align:center\">except</td>\n<td>除… 外</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">21</td>\n<td style=\"text-align:center\">encoding</td>\n<td>编码</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">22</td>\n<td style=\"text-align:center\">format</td>\n<td>格式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">23</td>\n<td style=\"text-align:center\">float</td>\n<td>浮点数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">24</td>\n<td style=\"text-align:center\">file</td>\n<td>文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">25</td>\n<td style=\"text-align:center\">forward</td>\n<td>向前，相对的还有 backward</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">26</td>\n<td style=\"text-align:center\">finally</td>\n<td>最后</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">27</td>\n<td style=\"text-align:center\">for</td>\n<td>为了，for 循环</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">28</td>\n<td style=\"text-align:center\">false</td>\n<td>假的，关键字 False</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">29</td>\n<td style=\"text-align:center\">from</td>\n<td>从…</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">30</td>\n<td style=\"text-align:center\">function</td>\n<td>功能，函数，方法</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">31</td>\n<td style=\"text-align:center\">global</td>\n<td>全局的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">32</td>\n<td style=\"text-align:center\">height</td>\n<td>高度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">33</td>\n<td style=\"text-align:center\">help</td>\n<td>帮助</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">34</td>\n<td style=\"text-align:center\">hexadecimal</td>\n<td>十六进制，通常用简写 hex</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">35</td>\n<td style=\"text-align:center\">default</td>\n<td>默认，缺省</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">36</td>\n<td style=\"text-align:center\">input</td>\n<td>输入，程序的输入</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">37</td>\n<td style=\"text-align:center\">index</td>\n<td>索引</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">38</td>\n<td style=\"text-align:center\">insert</td>\n<td>插入</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">39</td>\n<td style=\"text-align:center\">install</td>\n<td>安装，其反义词是 uninstall</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">40</td>\n<td style=\"text-align:center\">integer</td>\n<td>整数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">41</td>\n<td style=\"text-align:center\">if</td>\n<td>如果，关键字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">42</td>\n<td style=\"text-align:center\">import</td>\n<td>导入，关键字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">43</td>\n<td style=\"text-align:center\">in</td>\n<td>在… 里面，关键字（和 for 搭配）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">44</td>\n<td style=\"text-align:center\">is</td>\n<td>是，关键字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">45</td>\n<td style=\"text-align:center\">line</td>\n<td>线条</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">46</td>\n<td style=\"text-align:center\">left</td>\n<td>左边，右边是 right</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">47</td>\n<td style=\"text-align:center\">lambda</td>\n<td>希腊字母 λ，关键字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">48</td>\n<td style=\"text-align:center\">local</td>\n<td>本地的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">49</td>\n<td style=\"text-align:center\">module</td>\n<td>模块</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">50</td>\n<td style=\"text-align:center\">model</td>\n<td>模型</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">51</td>\n<td style=\"text-align:center\">not</td>\n<td>不，关键字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">52</td>\n<td style=\"text-align:center\">None</td>\n<td>没有一个，关键字 None</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">53</td>\n<td style=\"text-align:center\">nonlocal</td>\n<td>非本地的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">54</td>\n<td style=\"text-align:center\">number</td>\n<td>数字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">55</td>\n<td style=\"text-align:center\">octonary</td>\n<td>八进制，通常用简写 oct</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">56</td>\n<td style=\"text-align:center\">or</td>\n<td>或</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">57</td>\n<td style=\"text-align:center\">output</td>\n<td>输出，程序的输出</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">58</td>\n<td style=\"text-align:center\">pass</td>\n<td>通过，跳过关键字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">59</td>\n<td style=\"text-align:center\">process</td>\n<td>处理，程序的主要逻辑</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">60</td>\n<td style=\"text-align:center\">print</td>\n<td>打印</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">61</td>\n<td style=\"text-align:center\">python</td>\n<td>我们准备学的编程语言就是 python，<br>原意是蟒蛇</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">62</td>\n<td style=\"text-align:center\">quit</td>\n<td>离开</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">63</td>\n<td style=\"text-align:center\">range</td>\n<td>范围</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">64</td>\n<td style=\"text-align:center\">raise</td>\n<td>举起，引发，关键字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">65</td>\n<td style=\"text-align:center\">return</td>\n<td>返回，关键字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">64</td>\n<td style=\"text-align:center\">random</td>\n<td>随机的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">66</td>\n<td style=\"text-align:center\">string</td>\n<td>字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">67</td>\n<td style=\"text-align:center\">try</td>\n<td>尝试，关键字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">68</td>\n<td style=\"text-align:center\">turtle</td>\n<td>海龟</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">69</td>\n<td style=\"text-align:center\">true</td>\n<td>真的，关键字 True（首字母必须大写）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">70</td>\n<td style=\"text-align:center\">view</td>\n<td>视图</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">71</td>\n<td style=\"text-align:center\">version</td>\n<td>版本</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">72</td>\n<td style=\"text-align:center\">width</td>\n<td>宽度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">73</td>\n<td style=\"text-align:center\">while</td>\n<td>在… 期间，关键字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">74</td>\n<td style=\"text-align:center\">with</td>\n<td>跟随，随着，关键字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">74</td>\n<td style=\"text-align:center\">world</td>\n<td>世界</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">75</td>\n<td style=\"text-align:center\">yield</td>\n<td>生产，产量，关键字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">76</td>\n<td style=\"text-align:center\">zone</td>\n<td>地区</td>\n</tr>\n</tbody>\n</table>\n<p>这里只列出了 76 个单词，因为我暂时只想到这些，同时为了简单起见，只取了其在计算机编程中的含义。</p>\n<p>学习更多的单词，请点击 “阅读原文” 或扫描下面的二维码 &gt;&gt;</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2xhYi5jcm9zc2luY29kZS5jb20vcmVjaXRlLw==\">http://lab.crossincode.com/recite/</span></p>\n<p><img data-src=\"/images/coding/Crossin%E8%83%8C%E5%8D%95%E8%AF%8D.png\" alt=\"\"></p>\n<p><img data-src=\"/images/coding/%E8%AF%B4%E5%8F%A5%E8%8B%B1%E6%96%87%E8%BE%A3%E4%B9%88%E9%9A%BE%E5%90%97.gif\" alt=\"\"></p>\n<h2 id=\"二进制\"><a class=\"markdownIt-Anchor\" href=\"#二进制\">#</a> 二进制</h2>\n<p>不知道你有没有留意，我们现在普遍使用的进制是十进制，这是为什么呢？</p>\n<p><img data-src=\"/images/coding/%E6%89%8B%E6%8C%871.jpeg\" alt=\"\"></p>\n<p>也许大概是因为在人类文明初期，我们的祖先用十个手指来计算吧。我们从 1 开始数到 9，接下来就变成了 10，我们已经习以为常，所以并没有察觉到有什么不妥。</p>\n<p>其实我们日常生活中就已经用到其他进制，比如 1 分钟有 60 秒，1 小时有 60 分钟，这里用的就是六十进制（满六十进一位）；一天 24 小时，用的是二十四进制；一周 7 天，用的是七进制。</p>\n<p><img data-src=\"/images/coding/%E5%8F%A4%E4%BB%A3%E6%97%B6%E9%92%9F.jpeg\" alt=\"\"></p>\n<p>实际上，我们可以使用无数种进制来计算。在计算机领域，除了十进制之外，还经常使用二进制和十六进制。</p>\n<p>先来看看几种进制之间的对比</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">二进制</th>\n<th style=\"text-align:center\">十进制</th>\n<th style=\"text-align:center\">十六进制</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0000</td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0001</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0010</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0011</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">3</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0100</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">4</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0101</td>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0110</td>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">6</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0111</td>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">7</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1000</td>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">8</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1001</td>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\">9</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1010</td>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">A</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1011</td>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">B</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1100</td>\n<td style=\"text-align:center\">12</td>\n<td style=\"text-align:center\">C</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1101</td>\n<td style=\"text-align:center\">13</td>\n<td style=\"text-align:center\">D</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1110</td>\n<td style=\"text-align:center\">14</td>\n<td style=\"text-align:center\">E</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1111</td>\n<td style=\"text-align:center\">15</td>\n<td style=\"text-align:center\">F</td>\n</tr>\n</tbody>\n</table>\n<p>二进制非常简单，也就是满二进一位，因此只需要用 0 和 1 表示即可。</p>\n<p>要理解什么是二进制，先要从我们更熟悉的十进制开始。在十进制中，阿拉伯数字 “1” 的后面加上数字 “23” 后，为什么数字 “1” 所代表的意义忽然变成了 100？为什么把三个数字摆在一起，人们马上就会把它们理解为一个 “三位数”？这是因为十进制中，数位之间存在 “10 倍” 递增关系。</p>\n<p><img data-src=\"/images/coding/%E5%8D%81%E8%BF%9B%E5%88%B6.png\" alt=\"\"></p>\n<p>二进制的递增原理类似十进制，只不过它是 2 倍的进位关系。人们常用 0 和 1 这两个符号来表示二进制数字。</p>\n<p><img data-src=\"/images/coding/%E4%BA%8C%E8%BF%9B%E5%88%B6.png\" alt=\"\"></p>\n<p>跟人类世界不同，在计算机的世界中，更喜欢使用二进制来表示、存储数据。这是因为二进制能够表示最简单的状态，比如开关的开和关，越简单就越可靠，通过这些简单状态的组合，计算机就可以表示更多东西。</p>\n<p>这些状态组合也叫逻辑运算，也就是下面要讲的 “与或非” 运算。</p>\n<h2 id=\"与或非\"><a class=\"markdownIt-Anchor\" href=\"#与或非\">#</a> 与或非</h2>\n<p>在数学上，“与运算” 通常被称为 “且” 或者 “交集”，数学符号是  <code>∧</code>  ；“或运算” 通常被称为 “并” 或 “并集”，数学符号是  <code>∨</code> ；“非运算” 就是取反，数学符号是  <code>﹁ </code>  。</p>\n<p>在计算机中，与运算符用  <code>&amp;</code>  表示，或运算符用  <code>|</code>  表示，非运算符通常是  <code>!</code>  或  <code>~</code>  符号。</p>\n<p>而在 Python 编程中则更为直观，直接用 and、or、not 表示。下表被称为真值表，用 p 和 q 表示两种状态，右边三列是对应的与或非运算结果。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">p</th>\n<th style=\"text-align:center\">q</th>\n<th style=\"text-align:center\">p ∧ q<br>p and q<br>p &amp; q</th>\n<th style=\"text-align:center\">p ∨ q<br>p or q<br>p | q</th>\n<th style=\"text-align:center\">﹁ p<br>not p<br></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">假</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">假</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">真</td>\n</tr>\n</tbody>\n</table>\n<p>这样好一点</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">p</th>\n<th style=\"text-align:center\">q</th>\n<th style=\"text-align:center\">p 与 q</th>\n<th style=\"text-align:center\">p 或 q</th>\n<th style=\"text-align:center\">非 p</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">假</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">假</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">真</td>\n<td style=\"text-align:center\">真</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">假</td>\n<td style=\"text-align:center\">真</td>\n</tr>\n</tbody>\n</table>\n<p>想象一下，你要从 A 地走到 B 地，途中要经过两条桥。一种情况如下所示，你要先经过桥 1，再经过桥 2，我们说两座桥的关系是串联关系。只有当两座桥都畅通的时候才能顺利到达 B 地，只要其中一条桥堵塞都不能到达 B 地，如果两条桥都堵塞肯定也不能到达。这就是 “与” 运算。</p>\n<p><img data-src=\"/images/coding/%E4%B8%B2%E8%81%94.jpg\" alt=\"\"></p>\n<p>第二种情况如下所示，还是有两座桥，但是两座桥的关系是并联关系。如果桥 1 堵塞，我们还可以选择桥 2，反之亦然，只有当两座桥同时堵塞的时候才不能达到 B 地。这就是 “或” 运算。</p>\n<p><img data-src=\"/images/coding/%E5%B9%B6%E8%81%94.jpg\" alt=\"\"></p>\n<p>“非” 运算更简单，上面的真值表我们只对 p 做非运算，如果原来是真，非运算之后就是假。</p>\n<p>在计算机编程中，通常用 0 表示假（False），用 1 表示真（True）。如果把上表中的 “真” 用 1 替换，“假” 用 0 替换，其实就是我们前面所说的二进制 “逻辑运算”。</p>\n<h2 id=\"作业\"><a class=\"markdownIt-Anchor\" href=\"#作业\">#</a> 作业</h2>\n<p>（1）默写单词列表中的 76 个单词。</p>\n<p>（2）写出十进制 0~64 的二进制和十六进制表示。</p>\n<p>（3）理解并在纸上默写一遍真值表。</p>\n<p>（4）看看你身边的 U 盘、硬盘、手机存储容量大小，为什么通常都是 4GB、8GB、16GB、32GB、64GB …</p>\n<h2 id=\"附加题\"><a class=\"markdownIt-Anchor\" href=\"#附加题\">#</a> 附加题</h2>\n<p>（1）从你身边的设备找出以下计算机接口，观察它们有何特点，并了解其用途。</p>\n<ul>\n<li>USB</li>\n<li>HDMI</li>\n<li>DVI</li>\n</ul>\n<p>（2）了解不同文件的后缀名。</p>\n<ul>\n<li>可执行文件\n<ul>\n<li>exe</li>\n<li>py</li>\n</ul>\n</li>\n<li>文档（办公软件）\n<ul>\n<li>txt</li>\n<li>doc、docx</li>\n<li>xls、xlsx</li>\n<li>ppt、pptx</li>\n<li>md</li>\n</ul>\n</li>\n<li>压缩文件\n<ul>\n<li>zip</li>\n<li>rar</li>\n<li>7z</li>\n<li>tar</li>\n</ul>\n</li>\n<li>多媒体文件\n<ul>\n<li>图片：png、jpg、jpeg、bmp、gif</li>\n<li>音频：mp3、wav</li>\n<li>视频：mp4</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "Python",
                "教孩子学编程"
            ]
        },
        {
            "id": "https://luhuadong.com/coding/PyTK-2019-Day03.html",
            "url": "https://luhuadong.com/coding/PyTK-2019-Day03.html",
            "title": "【教孩子学编程】第3天 打倒拦路虎，学会键盘打字",
            "date_published": "2019-02-05T02:53:27.000Z",
            "content_html": "<p><img data-src=\"/images/coding/%E9%94%AE%E7%9B%98%E6%89%93%E5%AD%97.png\" alt=\"\"></p>\n<p>前两天的课程，其实我们都在给你强行灌输一些计算机硬件系统和软件系统方面的知识。当你顺利完成前面的课程和作业，你还不能开始编程，因为你即将遇到编程生涯中的第一道障碍 —— <strong>键盘打字</strong>！</p>\n<p><img data-src=\"/images/coding/%E6%89%93%E9%94%AE%E7%9B%98%E5%95%8A.gif\" alt=\"\"></p>\n<p>除了电脑主机之外的大部分硬件设备，都可称作外部设备，简称<strong>外设</strong>。键盘则是我们最常使用的外设。</p>\n<p>但是你知道吗？键盘的历史比计算机的历史还要早，虽然世界上第一台计算机在 20 世纪四十年代出现，个人使用的小型计算机到 70 年代才开始出现，但是作为现在计算机一个组件的键盘，最早可以追溯到 1714 年。</p>\n<h2 id=\"从打字机到键盘\"><a class=\"markdownIt-Anchor\" href=\"#从打字机到键盘\">#</a> 从打字机到键盘</h2>\n<p>很久很久以前，人们只能通过提笔写字的方式进行记录或书信来往。十八世纪，欧美的商业已经相当发达，每天有各种订货单子、商务信件、财务报表，还出现了很多文字工作者。</p>\n<p>因此，每天都有大量的文字依赖于手写，费时费力又费墨水，完全给商业发展拖后腿了。于是，想象力丰富的人们，开始寻思着一种能快速打字的机器。</p>\n<p><img data-src=\"/images/coding/%E8%8B%B1%E8%8D%B7%E6%88%98%E4%BA%89.jpeg\" alt=\"\"></p>\n<p>其实早在 1714 年，英国工程师亨利・米尔就有一项写字机器的专利，可惜的是并没有留下任何设计图样。英、美、法、意、瑞士等国家都有人造了形形色色的机器，但设计都还不成熟、没有使用价值，也就没能批量生产了。</p>\n<p>直到 1808 年，也就是 19 世纪初，世界上最早的打字机诞生了。它的发明者是意大利人佩莱里尼・图里，他爱上了一位姑娘，但姑娘却是位盲人，想要写字是无比困难的，为了让心爱的姑娘能够写字，他便亲手制作出了一台机械打字机。</p>\n<p><img data-src=\"/images/coding/1866%E5%B9%B4_Christopher_Sholes%E4%B9%8B%E5%A5%B3%E5%92%8C%E5%88%9D%E4%BB%A3%E6%89%93%E5%AD%97%E6%9C%BA.jpg\" alt=\"\"></p>\n<p>虽然那台打印机早已不见踪迹，但他的信件，至今保存在意大利勒佐市的档案馆里，被誉西方历史学家誉为 “人类文化史上继造纸术、印刷术后的第三项文化工具的发明”。后来，丹麦哥本哈根的尤尔根斯机械公司把英文打字机首次投入量产，发明人是一位名叫马林・汉森的神父。</p>\n<p>不过那还算不上真正的实用。1968 年，美国人克里斯托夫・拉森・肖尔斯和卡洛斯・格利登原本正在制作一台能自动给书编页码的机器，格利登突然问肖尔斯，“我们为啥不同时在书本上印字呢？”，肖尔斯灵机一动，一台木制的打字机模型问世了。</p>\n<p><img data-src=\"/images/coding/%E6%9C%A8%E5%88%B6%E6%89%93%E5%AD%97%E6%9C%BA%E6%A8%A1%E5%9E%8B.jpg\" alt=\"\"></p>\n<p>这台打字机和后来的基本一样，每打完一个字母后都会自动向后移位，字体也很清晰。但起初他设计的打字机很大很丑，因为大小写字母都有独立按键，导致键盘上足足有 78 个按键（还好不是汉字，哈哈）。同时，由于结构问题，打字的时候看不到自己有没有打错，所以容错率比较低。</p>\n<p>19 世纪 70 年代，肖尔斯公司是当时最大的打字机厂商。但这么多的按键，设计比较冗杂、机械结构不完善，按键回弹很慢，打字太快了两个键就会卡在一起，所以公司经常被投诉，该怎么办呢？</p>\n<p><img data-src=\"/images/coding/%E6%89%93%E5%AD%97%E6%9C%BATypewriter.gif\" alt=\"\"></p>\n<p>一位 “睿智” 的工程师表示 “打字绞键的原因，除了是字键弹回速度慢，也是打字员速度太快了，为什么不想办法降低打字速度呢？”（你可真是个设计鬼才啊）</p>\n<p>为了降低打字速度，他们决定打乱 26 个字母的排列顺序，常用字母放在笨拙的手指位置，不常用的字母放在灵活的手指附近，于是，“QWERTY” 式键盘就诞生了。肖尔斯在 1868 年申请了专利，并在 1873 年成功投放市场，成为了至今以来非常典型的 “<strong>劣势产品战胜优势产品</strong>” 的例子。</p>\n<p><img data-src=\"/images/coding/%E5%8F%A4%E8%91%A3%E6%89%93%E5%AD%97%E6%9C%BA.jpg\" alt=\"\"></p>\n<p>而肖尔斯曾经的合作者约斯特，此时也正好在一家公司的赞助下开始研究打字机。长江后浪拍前浪，意识到了肖尔斯设计的打字机键盘键位多的问题，他通过一根控制杆、使同一个键能打出大小写两种字母，将键位缩减了 26 个，同时还能实时看到打出的字，大幅度提升了工作效率。这种打字机于 1874 年正式进入市场并得到了推广。</p>\n<p><img data-src=\"/images/coding/%E5%8F%A4%E8%91%A3%E6%89%93%E5%AD%97%E6%9C%BA2.jpg\" alt=\"\"></p>\n<p>1888 年 7 月 25 日，美国辛辛那提举行了一场打字的比赛，来自盐湖城的法庭速记员麦古瑞由于天天打字，键位了熟于心，他用 QWERTY 键位的打字机实现高速盲打，错误率仅为万分之三，最终夺得冠军，这让 QWERTY 的地位进一步提高。</p>\n<p>进入 20 世纪，更方便的电传打字机出现了。它通常由键盘、收发报器、印字机构等组成，分为电子式和机械式两种。主要用于电报系统，某种意义上来说，它更像现在的传真机。</p>\n<p><img data-src=\"/images/coding/%E7%94%B5%E4%BC%A0%E6%89%93%E5%AD%97%E6%9C%BA.jpg\" alt=\"\"></p>\n<p>不过体积很大，接近现在的大尺寸打印机。它的键盘部分依旧采用了 QWERTY 布局，具备了电话级的高效性、精确性，使用成本又比电话、电报更便宜。</p>\n<p>40 年代大型计算机诞生，60 年代可视终端开始流行起来，这种设备往往自带键盘，用户的交互都是通过键盘来完成的。</p>\n<p><img data-src=\"/images/coding/60%E5%B9%B4%E4%BB%A3%E7%9A%84%E5%8F%AF%E8%A7%86%E7%BB%88%E7%AB%AF.jpg\" alt=\"\"></p>\n<p>事实上这套设备只是一个显示器和键盘，它还是需要接到大型上使用，敲键盘打字总比到大型设备上操作开关、塞塞卡纸方便许多。</p>\n<p>20 世纪 70 年代，居然就已经出现了 “人体工程学键盘”，Maltron 等公司为了进一步提高输入效率、也为了更舒适健康地打字，设计并生产了很多有趣的键盘。</p>\n<p><img data-src=\"/images/coding/70%E5%B9%B4%E4%BB%A3%E7%9A%84%E4%BA%BA%E4%BD%93%E5%B7%A5%E7%A8%8B%E5%AD%A6%E9%94%AE%E7%9B%98.jpg\" alt=\"\"></p>\n<p>1983 年，还在 IBM 推出 XT/AT 机的时代，真正意义上的键盘才开始出现。那时候的键盘主要以 83 键为主流吗，很久之后才出现了 101 键、104 键规格的键盘。</p>\n<p>IBM 紧接着在 104 键键盘的基础上设计了多媒体键盘，增加了很多常用快捷键、音量调节键等等。同时也为电子邮件、浏览器、播放器等常用软件增加了一对一的快捷按键。</p>\n<p><img data-src=\"/images/coding/IBM%E5%A4%9A%E5%AA%92%E4%BD%93%E9%94%AE%E7%9B%98.jpg\" alt=\"\"></p>\n<p>起初键盘多用于品牌机，到了后来 DIY 行业兴起了，电脑发烧友变多了，一些厂家就想法子，把键盘做成了周边产品。</p>\n<p>也多亏了 IBM 公司，键盘的生产成本大幅降低。起初每个键帽都要单独开模，直到 1985 年，IBM 开始制造没有字符的键帽，再后期粘上字母，大家终于顿悟了…</p>\n<p><img data-src=\"/images/coding/%E5%B0%8F%E9%BB%84%E4%BA%BA-%E5%93%87.gif\" alt=\"\"></p>\n<h2 id=\"为什么不按字母顺序排列\"><a class=\"markdownIt-Anchor\" href=\"#为什么不按字母顺序排列\">#</a> 为什么不按字母顺序排列</h2>\n<p>其实，发明 QWERTY 排列法的肖尔斯 Christopher Sholes 在制作第一个打印机模型时，确实是按照二十六个字母的顺序排列的。但让他崩溃的是，ABCD 用起来实在是太快了，打字机各种瘫痪。</p>\n<p>前面我们说过 QWERTY 排列法的设计，其实是为了拖慢打字的速度。</p>\n<p><img data-src=\"/images/coding/%E6%89%93%E5%AD%97%E6%9C%BA%E9%94%AE%E7%9B%98.jpg\" alt=\"\"></p>\n<p>然而，打字机毕竟是一种商品，速度慢这件事不利于宣传，卖不出去。于是，商家们就开始了他们的套路大法。他们给产品命名为 —— TYPEWRITER（打字机）。这个词正好位于 QWERTY 键盘的第一排，演示的简直太方便。紧接着，商家还开办了一个专门培训打字员的课程，用的就是这种键盘，当时的普通民众一看，好新鲜！还能找到新工作！便开始纷纷认可这种排列方式。</p>\n<p>随着按键原理和材料技术的进步，打字机不再那么容易因为打字太快而崩溃了，开始有人思考 QWERTY 布局的合理性。1932 年，华盛顿大学教授奥古斯特・多芙拉克（August Dvorak）开始思考这个问题，他觉得合理的键盘应该做到：</p>\n<ol>\n<li>左右手的负荷量应该相等。</li>\n<li>最大化中间排（home row）的负荷。</li>\n<li>两手顺序交替的频率最大化，相同手指频率最小化。</li>\n</ol>\n<p>于是，他设计出了键位排列更科学的 DVORAK 布局，要知道目前世界最快的英文打字速度是在 Dvorak 键盘上创造的，由 BarbaraBlackburn 于 2005 年创造。但由于 QWERTY 早已普及，人们并不想在重新学习新的布局，所以 DVORAK 依旧无法流行起来。</p>\n<p><img data-src=\"/images/coding/DVORAK%E5%B8%83%E5%B1%80.jpg\" alt=\"\"></p>\n<p>另外有一种 COLEMAK 布局，它是在 QWERTY 的基础上改进而来，有 10 多个键位的变化，8 个高频键完美安排在了中间一列，真正意义上做到了完美分布，手指移动距离更小。</p>\n<p><img data-src=\"/images/coding/COLEMAK%E5%B8%83%E5%B1%80.jpg\" alt=\"\"></p>\n<p>有一种 MALT 布局的键盘比较神奇，它是由理连・莫尔特（Lillian Malt）发明的，这种布局可以充分利用每一个手指，双手掌握一切，长时间使用还不容易疲劳。</p>\n<p><img data-src=\"/images/coding/MALT%E5%B8%83%E5%B1%80.jpg\" alt=\"\"></p>\n<p>然而，即便这些键盘设计更为科学先进，人们经过训练，打字速度也有明显提升，但是依然响应平平。依靠广大人们的认可，QWERTY 排列法打败了无数排列方式，在键盘发展史上笑到最后。原因就在于 QWERTY 排列法诞生于 1866 年，比它们早了将近一百年，人们早就习惯了这种方式，而且熟能生巧。现在我们所看到的键盘，绝大多数都是 QWERTY 布局的键盘。</p>\n<p><img data-src=\"/images/coding/%E5%B8%B8%E8%A7%81%E7%9A%84Dell%E9%94%AE%E7%9B%98.jpg\" alt=\"\"></p>\n<p>这让我感受到了 “先入为主” 的力量，和 “打破常规” 的可贵。但同时，一切伟大的成就都是通过长期的努力得来的。</p>\n<p><img data-src=\"/images/coding/%E5%85%88%E5%85%A5%E4%B8%BA%E4%B8%BB.jpeg\" alt=\"\"></p>\n<h2 id=\"认识键盘\"><a class=\"markdownIt-Anchor\" href=\"#认识键盘\">#</a> 认识键盘</h2>\n<p>按照功能的不同，我们可以把键盘划分成 5 个区域。</p>\n<ul>\n<li><strong>主键盘区</strong>：包含字母键、数字（符号）键、功能键；</li>\n<li><strong>功能键区</strong>：包含 Esc 和 F1~F12 键，以及 PrintScreen、ScrollLock 和 Pause 键；</li>\n<li><strong>控制键区</strong>：包含上翻、下翻和方向键等；</li>\n<li><strong>数字键区</strong>：又称小键盘区，主要是为了方便输入数据，笔记本电脑通常省略；</li>\n<li><strong>状态指示区</strong>：对应数字键锁定、大写锁定、屏幕滚动显示锁定（很少用）。</li>\n</ul>\n<p><img data-src=\"/images/coding/%E6%89%93%E5%AD%97%E5%9F%BA%E7%A1%80-%E8%AE%A4%E8%AF%86%E9%94%AE%E7%9B%98.png\" alt=\"\"></p>\n<p>打字时双手十个手指都有明确的分工，按照正确的手指分工打字，有利于实现提高打字速度和准确度。</p>\n<p><img data-src=\"/images/coding/%E6%89%93%E5%AD%97%E5%9F%BA%E7%A1%80-%E6%89%8B%E6%8C%87%E5%88%86%E5%B7%A5.png\" alt=\"\"></p>\n<p>输入法快捷键操作</p>\n<ul>\n<li>Ctrl + 空格：在输入法与非输入法之间切换。（非输入法指的是中文简体美式键盘，只能打字母的那个）</li>\n<li>Ctrl + Shift：在你电脑里的中文输入法之间切换。</li>\n<li>Shift + Alt：在中文输入法和外文输入法之间切换，比如搜狗输入法和日文输入法之间。</li>\n</ul>\n<p>常见功能按键缩写</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">按键</th>\n<th style=\"text-align:center\">全称</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Ctrl</td>\n<td style=\"text-align:center\">Control</td>\n<td style=\"text-align:center\">控制键（用途广泛，苹果电脑上对应的是 command 键）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Alt</td>\n<td style=\"text-align:center\">Alternate</td>\n<td style=\"text-align:center\">交替换挡键（左右各有 1 个 Alt 键）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Shift</td>\n<td style=\"text-align:center\">就是 Shift</td>\n<td style=\"text-align:center\">上档转换键（左右各有 1 个 Shift 键）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Caps Lock</td>\n<td style=\"text-align:center\">Capitals Lock</td>\n<td style=\"text-align:center\">大写锁定（大小写字母转换键）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Tab</td>\n<td style=\"text-align:center\">Table</td>\n<td style=\"text-align:center\">制表符（通常相等于 4 个或 8 个空格）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Fn</td>\n<td style=\"text-align:center\">Function</td>\n<td style=\"text-align:center\">功能键（通常用于补充台式机上有而笔记本上省略的按键）</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"打字练习\"><a class=\"markdownIt-Anchor\" href=\"#打字练习\">#</a> 打字练习</h2>\n<p>我已经在 Ubuntu 上为你准备了一个叫 TuxType 的打字软件。如果还没安装，打开终端执行以下命令安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install tuxtype</span><br></pre></td></tr></table></figure>\n<p>启动电脑，在键盘中按下 “Ctrl + Alt + T” 打开一个新的终端，输入  <code>tuxtype</code>  并按回车键，你将会看到如下界面：</p>\n<p><img data-src=\"/images/coding/tuxtype%E7%95%8C%E9%9D%A21.jpg\" alt=\"\"></p>\n<p>软件启动之后，你会听到一段有点难听的音乐，如果不喜欢可以把音量调小一点。</p>\n<p>最开始处的两个选项 “Fish Cascade” 和 “Comet Zap” 是打字游戏，当你开始游戏时，你就投入到了这个课程。</p>\n<p>第 3 个选项 “Lessions” 提供了 40 多个简单的课程，每个课程会增加一个字母让你来练习，练习过程中会给出一些提示，比如应该用哪个手指按键盘上的字母。</p>\n<p><img data-src=\"/images/coding/tuxtype%E7%95%8C%E9%9D%A22.jpg\" alt=\"\"></p>\n<p><img data-src=\"/images/coding/tuxtype%E7%95%8C%E9%9D%A23.jpg\" alt=\"\"></p>\n<p>更高级点的，你可以练习输入句子，句子练习放在 “Options” 选项里。</p>\n<p><img data-src=\"/images/coding/tuxtype%E7%95%8C%E9%9D%A24.jpg\" alt=\"\"></p>\n<p>句子练习第一句是 “The quick brown fox jumps over the lazy dog”（一只敏捷的棕毛狐狸从懒狗身上跳过）。</p>\n<p>你发现了没，这个句子包含了 26 个英文字母，所以可用于检测键盘是否有坏键。当你顺利敲完这个句子之后，你会听到来自电脑的欢呼声，同时也说明你使用的键盘是完好的，否则你应该马上找小卢老师帮忙。</p>\n<p><img data-src=\"/images/coding/tuxtype%E7%95%8C%E9%9D%A25.jpg\" alt=\"\"></p>\n<p><img data-src=\"/images/coding/tuxtype%E7%95%8C%E9%9D%A26.jpg\" alt=\"\"></p>\n<p>这些游戏让你打出单词，来帮助 Tux 吃到小鱼或者干掉掉下来的流星，训练速度和精确度。这些游戏还可以训练你的拼写、速度、手眼配合能力，因为你如果认真在玩的话，必须盯着屏幕，不看键盘打字。</p>\n<p>通过不断地练习，你将掌握正确的打字姿势，养成良好的键盘使用习惯。不要小看它哦，它将会为以后的学习打下坚实的基础，加油！（隔一段时间记得要休息一下哦）</p>\n<p><img data-src=\"/images/coding/%E5%8A%A0%E6%B2%B9.jpeg\" alt=\"\"></p>\n<h2 id=\"作业\"><a class=\"markdownIt-Anchor\" href=\"#作业\">#</a> 作业</h2>\n<p>（1）数一数你的键盘上有多少个键。</p>\n<p>（2）想一想身边还有哪些 “先入为主”、“劣势战胜优势” 的事物。</p>\n<p>（3）练习键盘打字，直到不看键盘也能打出所有英文字母和标点符号。</p>\n",
            "tags": [
                "Python",
                "教孩子学编程"
            ]
        },
        {
            "id": "https://luhuadong.com/coding/PyTK-2019-Day02.html",
            "url": "https://luhuadong.com/coding/PyTK-2019-Day02.html",
            "title": "【教孩子学编程】第2天 不同性格的电脑",
            "date_published": "2019-02-04T02:53:27.000Z",
            "content_html": "<p><img data-src=\"/images/coding/%E6%88%91%E8%82%A5%E6%9D%A5%E8%BE%A3.jpg\" alt=\"\"></p>\n<p>经过一天的相处，你和你的新朋友相处是否融洽？你是否接纳了你的新伙伴？你是否想进一步了解她？</p>\n<h2 id=\"操作系统决定了性格\"><a class=\"markdownIt-Anchor\" href=\"#操作系统决定了性格\">#</a> 操作系统决定了性格</h2>\n<p>完成第 1 天的作业之后，你惊讶地发现，不同电脑的显示界面差别很大，操作方式也不太一样，里面安装的软件也不相同。你更喜欢哪个？</p>\n<p><img data-src=\"/images/coding/%E5%A5%BD%E7%9C%8B%E7%9A%84Linux-Mac-Win.jpeg\" alt=\"\"></p>\n<p>小卢老师提供了 3 台运行着不同操作系统的电脑，分别是 Linux、macOS 和 Windows。它们是当今主流三大计算机操作系统，有着不同的性格：</p>\n<ul>\n<li>windows 经济适用，档次较低；</li>\n<li>macOS 高端大气上档次；</li>\n<li>Linux 是极客专用。</li>\n</ul>\n<h3 id=\"windows\"><a class=\"markdownIt-Anchor\" href=\"#windows\">#</a> Windows</h3>\n<blockquote>\n<p><strong>绚丽多彩，善解人意，讨人喜欢，经济适用</strong></p>\n</blockquote>\n<p>在我国，Windows 的普及率最高，远远超过 macOS，更别提 Linux 了。Windows 被广泛使用 PC 领域，对软件和中文的支持也很不错，特别是一些大型游戏和专业软件。</p>\n<h3 id=\"macos\"><a class=\"markdownIt-Anchor\" href=\"#macos\">#</a> macOS</h3>\n<blockquote>\n<p><strong>优雅端庄，追求极致，热情浪漫，消费力高</strong></p>\n</blockquote>\n<p>macOS 系统只能运行在苹果公司的电脑，因此使用范围较窄，但也正因如此，macOS 运行流畅，在一些专业领域广泛应用。同时 macOS 和 Linux 是亲戚关系，有相似的编程接口和命令行操作（很快会学到），所以很多 Linux 上的东西也能在 macOS 上使用。</p>\n<h3 id=\"linux\"><a class=\"markdownIt-Anchor\" href=\"#linux\">#</a> Linux</h3>\n<blockquote>\n<p><strong>单纯专注，追求自由，乐于分享，甘于奉献，胸怀天下</strong></p>\n</blockquote>\n<p>Linux 伴随自由运动和黑客的分享精神而崛起，她天生就是多任务、多用户的操作系统，主要应用于服务器和嵌入式领域（比如安卓手机）。Linux 系统支持的硬件很多，并且更新很快，软件兼容性也很好，目前很多生物信息、科学计算、人工智能等软件都是首先支持 Linux 系统的。</p>\n<p><img data-src=\"/images/coding/Linux%E5%90%89%E7%A5%A5%E7%89%A9tux.jpeg\" alt=\"\"></p>\n<p>虽然我们的目的是学习 Python 编程，对于初学者来说其实不需要关注操作系统的事情。但毕竟一旦选择了某个操作系统，未来一段日子里将与她朝夕相处，操作系统的性格也会潜移默化地影响到使用者。所以，为了培养 “独立之精神，自由之思想”，我建议使用 Linux 操作系统，后面的学习将会在一个叫 “Ubuntu” 的 Linux 发行版系统上进行。</p>\n<h2 id=\"启动你的-linux\"><a class=\"markdownIt-Anchor\" href=\"#启动你的-linux\">#</a> 启动你的 Linux</h2>\n<p>笔记本电脑已经预装了 Ubuntu，按下电源开关，稍等片刻将进入系统登录界面。现在输入用户密码，按下 Enter 键即可登录（前面我们说过，Linux 是多用户系统，所以你要记住你的用户名和密码哦）。</p>\n<p>进入系统，我们会看到左侧有一个被称为 “Ubuntu Dock” 的面板，在键盘中按下 “Ctrl + Alt + T”，将会打开一个被称为终端（Terminal）的窗口，接下来我们将在这里输入一些命令来和电脑交流。</p>\n<p><img data-src=\"/images/coding/Ubuntu1604.png\" alt=\"\"></p>\n<h2 id=\"操作-linux-命令\"><a class=\"markdownIt-Anchor\" href=\"#操作-linux-命令\">#</a> 操作 Linux 命令</h2>\n<p>先来熟悉以下十条命令：</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>英文解释</th>\n<th>中文解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ls</code></td>\n<td>List directory contents</td>\n<td>列出目录的内容（这里的 “目录” 也称为 “文件夹”）</td>\n</tr>\n<tr>\n<td><code>cd</code></td>\n<td>Change directory</td>\n<td>改变工作目录</td>\n</tr>\n<tr>\n<td><code>mkdir</code></td>\n<td>Make directory</td>\n<td>创建一个目录</td>\n</tr>\n<tr>\n<td><code>cp</code></td>\n<td>Copy files or directories</td>\n<td>将指定的文件或目录复制到另一个文件或目录中</td>\n</tr>\n<tr>\n<td><code>mv</code></td>\n<td>Move files or directories</td>\n<td>移动文件或目录的位置，或修改文件或目录的名称</td>\n</tr>\n<tr>\n<td><code>rm</code></td>\n<td>Remove files or directories</td>\n<td>删除一个或多个文件或目录</td>\n</tr>\n<tr>\n<td><code>touch</code></td>\n<td>Create a new file or change its timestamp</td>\n<td>修改文件时间戳，或者新建一个不存在的文件</td>\n</tr>\n<tr>\n<td><code>cat</code></td>\n<td>Concatenate files and print</td>\n<td>文本输出命令，通常是用于查看某个文件的内容</td>\n</tr>\n<tr>\n<td><code>echo</code></td>\n<td>Display a line of text</td>\n<td>字符串输出，可以通过重定向将内容输出到文件</td>\n</tr>\n<tr>\n<td><code>pwd</code></td>\n<td>Print name of working directory</td>\n<td>显示工作目录的路径名称</td>\n</tr>\n</tbody>\n</table>\n<p>现在，我们在前面打开的终端中输入这些命令，在终端中你会看到有一串提示符，就像这样：</p>\n<p><img data-src=\"/images/coding/Linux%E7%BB%88%E7%AB%AF%E6%8F%90%E7%A4%BA%E7%AC%A6.png\" alt=\"\"></p>\n<p>其中，rudy 是当前登录的用户名称，OptiPlex-7050 是机器的名称，它们之间有一个 @ 符号隔开，接着后面有个冒号，冒号后面有个蓝色的～符号，表示当前操作的位置是在家目录（也就是 rudy 用户专属的文件夹），最后还有一个 $ 符，它在提醒你 “现在你可以输入命令啦”。大胆地输入命令吧，别忘了最后还要敲回车键（Enter 键）通知电脑你已经输入完毕了！</p>\n<p>OK，接下来我们根据下面的提示完成练习：</p>\n<ol>\n<li>打开一个新的终端；</li>\n<li>输入  <code>pwd</code>  看看你现在在哪里；</li>\n<li>输入  <code>ls</code>  看看当前文件夹里都有什么；</li>\n<li>输入  <code>touch file.txt</code>  创建一个名为 file.txt 的文件，文件通常有个后缀（也就是 txt），文件名和后缀之间用。隔开；</li>\n<li>输入  <code>cat file.txt</code>  查看文件内容（我们还没写内容，你当然看不到任何东西）；</li>\n<li>输入  <code>echo &quot;hello&quot; &gt; file.txt</code>  命令，将会在文件中写入 hello 单词；</li>\n<li>再次输入  <code>cat file.txt</code>  看看；</li>\n<li>输入  <code>mkdir test</code>  创建一个叫 test 的文件夹；</li>\n<li>输入  <code>mv file.txt test</code>  将 file.txt 文件移动到 test 目录中；</li>\n<li>输入  <code>cd test</code>  进入 test 目录，你会发现提示符中的～变成了～/test（说明目录切换成功）；</li>\n<li>输入  <code>pwd</code>  看看现在的目录路径；</li>\n<li>输入  <code>ls</code>  看看 file.txt 文件在不在这里面；</li>\n<li>输入  <code>cp file.txt file2.txt</code>  把 file.txt 文件复制一份，并命名为 file2.txt ；</li>\n<li>再次输入  <code>ls</code>  看看 file2.txt 是否存在；</li>\n<li>输入  <code>cat file.txt file2.txt</code>  看看两个文件的内容是否一致；</li>\n<li>输入  <code>rm file.txt</code>  把 file.txt 删掉；</li>\n<li>输入  <code>ls</code>  看看 file.txt 是否真的被删除了；</li>\n<li>输入  <code>cd ..</code>  切换到上一级目录（先记住： <code>.</code>   表示当前目录， <code>..</code>  表示上一级目录）；</li>\n<li>输入  <code>rm -r test</code>  将整个 test 目录删除；</li>\n<li>输入  <code>ls</code>  看看还能不能找到 test 目录。</li>\n</ol>\n<p>不知不觉，你已经掌握了我们前面列出的十条 Linux 命令！给自己一点掌声吧～</p>\n<p><img data-src=\"/images/coding/%E7%83%AD%E7%83%88%E9%BC%93%E6%8E%8C.gif\" alt=\"\"></p>\n<p>什么？你还没掌握？赶紧多练习几遍！</p>\n<p>操作命令截图</p>\n<p><img data-src=\"/images/coding/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%BB%83%E4%B9%A0.png\" alt=\"\"></p>\n<h2 id=\"文本编辑器\"><a class=\"markdownIt-Anchor\" href=\"#文本编辑器\">#</a> 文本编辑器</h2>\n<p>前面我们用  <code>echo</code>  命令往文件中写入了一个单词 “hello”，那我们想多写点内容怎么办？</p>\n<p>接下来我们会使用一个叫 vim 的编辑器。打开一个新的终端，输入  <code>vim file.txt</code>  命令，意思是使用 vim 工具打开 file.txt 文件，如果这个文件不存在，则创建一个。</p>\n<p><img data-src=\"/images/coding/vim%E7%BC%96%E8%BE%91%E5%99%A8.png\" alt=\"\"></p>\n<p>但是你随便敲几个字母发现根本没有显示出来！这是因为模式不对，vim 有三种模式，分别是命令模式、编辑模式和末行模式。当你启动 vim 时，初始状态是命令模式，你可以 i、a 或 o 三个字母中的任意一个，即可切换到编辑模式，进入编辑模式之后就可以往文件写东西啦。</p>\n<p>在编辑模式下按下 Esc 键，则切换回命令模式。假如这时候你写完内容想保存，则在命令模式下按冒号键切换到末行模式，输入  <code>w</code>  回车保存文件，输入  <code>q</code>  则退出 vim，如果你想保存后直接退出，则输入  <code>wq</code> 。</p>\n<p><img data-src=\"/images/coding/vim.png\" alt=\"\"></p>\n<p>现在，你只要学会编辑文本、移动光标、保存、退出这几个功能就可以了。</p>\n<p><strong>练习三种模式的主要功能</strong></p>\n<ul>\n<li>命令模式：复制、粘贴、删除、移动光标、查找</li>\n<li>编辑模式：编辑文本</li>\n<li>末行模式：保存、退出、替换</li>\n</ul>\n<p><strong>编辑模式下的一些操作</strong></p>\n<ul>\n<li>用鼠标任意的选中某行，就是已经复制完成了。在容易的地方按下滚轮即粘贴（Linux 的一种特色）</li>\n<li>按 ctrl+n 可以实现单词补全。（单词必须是当前文件中的单词，如果不存在则不能补全）</li>\n</ul>\n<p><strong>命令模式下的一些操作</strong></p>\n<ul>\n<li>向右移动一个单词：w</li>\n<li>向左移动一个单词：b</li>\n<li>向右移动 80 个字符：80 右箭头（数字和方向，可以随意选取）</li>\n<li>快速向左向右移动光标：ctrl + 左右箭头</li>\n<li>移动光标到行首：0</li>\n<li>移动光标到行尾：$</li>\n<li>移动光标到文件最后一行：G</li>\n<li>移动光标到文件第一行：1G（数字可以随意选取）</li>\n<li>复制光标所在行开始的 2 行：2yy（数字可以随意选取）</li>\n<li>将复制的行粘贴到光标所在行的下面：小写 p（小写是下面大写则是上面）</li>\n<li>删除光标所在行开始的 3 行：3dd（数字可以随意选取）</li>\n<li>删除光标开始到单词结尾：dw</li>\n<li>删除光标开始到行首部分：d0</li>\n<li>删除光标开始到行尾部分：d$</li>\n<li>撤销上一步的操作：u</li>\n<li>重复前一步的操作：ctrl+r</li>\n<li>重复前一步的操作：ctrl+r</li>\n<li>查找 root： /root   按 n 或 N 向下、向上继续查找（root 是文件中的全部单词）</li>\n</ul>\n<p><strong>末行模式（：属于指令的一部分）</strong></p>\n<ul>\n<li>\n<p>存盘指令：w</p>\n</li>\n<li>\n<p>另存指令：w 文件名</p>\n</li>\n<li>\n<p>存盘并退出指令：wq</p>\n</li>\n<li>\n<p>退出指令：q</p>\n</li>\n<li>\n<p>强制退出不存盘指令：q!</p>\n</li>\n<li>\n<p>将光标定位到第 3 行 指令 :3（数字可以随意选取）</p>\n</li>\n<li>\n<p>将光标所在行的第一个 A 字母替换为 B 字母的指令 😒/A/B</p>\n<ul>\n<li>（如果要替换行中的所有的 A，则需要加上字母 g 为：s/A/B/g）</li>\n<li>（如果要替换文件中的所有的 A，则需要在加上 % s 为：% s/A/B/g）</li>\n<li>（如果要替换文件中指定的行数，则需要变为：2，10s/A/B/g（数字可以随意选取））</li>\n<li>（如果要替换文件中指定的行数到最后一行，则需要变为：2，$s/A/B/g（数字可以随意选取））</li>\n</ul>\n</li>\n<li>\n<p>显示出行号的指令：set nu</p>\n</li>\n</ul>\n<p>什么？太难了你要走啦？</p>\n<p><img data-src=\"/images/coding/%E5%93%AD%E5%94%A7%E5%94%A7.gif\" alt=\"\"></p>\n<p>好吧，其实除了 vim 这种命令式的编辑器，在 Linux 上我们还可以使用很多图形界面的编辑器，比如 gedit 和 Sublime Text，以及一些办公软件。</p>\n<p>在图形界面中，刚刚我们费劲脑汁去记的命令都不用管了，比如复制、粘贴、编辑、查找、替换、保存、退出等操作都可以在菜单栏中找到，用鼠标点点点就能完成。</p>\n<p><img data-src=\"/images/coding/%E7%BC%96%E8%BE%91%E5%99%A8gedit.png\" alt=\"gedit 编辑器\"></p>\n<p><img data-src=\"/images/coding/%E7%BC%96%E8%BE%91%E5%99%A8subl3.png\" alt=\"Sublime Text 编辑器\"></p>\n<p>对于这些编辑器，常用快捷键有：</p>\n<ul>\n<li>Ctrl + C：复制</li>\n<li>Ctrl + V ：粘贴</li>\n<li>Ctrl + F ：查找</li>\n<li>Ctrl + S：保存</li>\n</ul>\n<p>注意：这些快捷键操作在 Linux 和 Windows 上都可以使用，如果是 macOS，则需要把 Ctrl 键换成 Command 键。</p>\n<h2 id=\"作业\"><a class=\"markdownIt-Anchor\" href=\"#作业\">#</a> 作业</h2>\n<p>（1）给你的电脑安装 Ubuntu 系统。</p>\n<p>（2）反复练习 Linux 命令，直到不看文档也可以完成上面的练习。</p>\n<p>（3）对比 Vim 和图形界面编辑器，找出它们的异同点。</p>\n<p>（4）使用 Microsoft Office 分别新建、编辑、保存 Word、Excel、PowerPoint 文档，同时观察其文件名后缀。</p>\n",
            "tags": [
                "Python",
                "教孩子学编程"
            ]
        },
        {
            "id": "https://luhuadong.com/coding/PyTK-2019-Day01.html",
            "url": "https://luhuadong.com/coding/PyTK-2019-Day01.html",
            "title": "【教孩子学编程】第1天 和电脑做朋友",
            "date_published": "2019-02-03T02:53:27.000Z",
            "content_html": "<p>猪年终于到了！不，春节终于到了！小卢老师也迎来了十天小长假！</p>\n<p><img data-src=\"/images/coding/%E7%8C%AA%E5%B9%B4.png\" alt=\"\"></p>\n<p>念初中的表妹跟我吐槽说，她在学校是话题终结者，很难跟同学聊下去，而且已经十几岁了，大人还是把她当小孩看，真的好累… 还有，过年能不能不要问分数。</p>\n<p>小卢老师二十几岁了，我也感觉好累！但是再苦再累也要坚持下去，才能过自己想要的人生。</p>\n<p>表妹的性格有点像我，不喜欢叽叽喳喳说个不停，宁愿一个人静静地看书。而且涉猎广泛，不同类型的书都愿意去看，喜欢理科，不喜欢文言文… 所以，我决定教她计算机编程！</p>\n<p><img data-src=\"/images/coding/%E6%88%91%E5%8D%81%E5%87%A0%E5%B2%81%E6%88%91%E5%A5%BD%E7%B4%AF.jpeg\" alt=\"\"></p>\n<p>于是，趁着春节假期，我厚着脸皮地开展了【小卢老师的 Python 春节特训营】系列十天入门教程，每天学习一小时即可。事不宜迟，开片～</p>\n<h2 id=\"认识我们的新朋友\"><a class=\"markdownIt-Anchor\" href=\"#认识我们的新朋友\">#</a> 认识我们的新朋友</h2>\n<p>学编程只需要一台电脑就够了，相信很多 00 后都已经用过电脑，可能是玩游戏、看视频或者挂 QQ（听说 00 后又用回 QQ 了）。如果没有也没关系，从现在开始，你要和你的电脑做朋友！</p>\n<img data-src=\"/images/coding/开学交朋友.jpeg\" width=\"400\" />\n<p>好好看看你的新朋友，她将是你未来的好搭档。</p>\n<p>当你认识一个新朋友，你会观察她的五官、衣着、谈吐、发型、有没有戴眼镜等等。看下面的图，顺便背一下单词～</p>\n<img data-src=\"/images/coding/身体部位-柯南.jpeg\" width=\"600\" />\n<p>电脑现在是你的新朋友，同样，首先你也要去观察她，看看一台电脑的硬件系统包括哪些部件？</p>\n<p><img data-src=\"/images/coding/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%E7%BB%84%E6%88%90.jpeg\" alt=\"\"></p>\n<p>你的新朋友叫 “电脑”，正式名称叫 “计算机”，英文是 “Computer”，简称 “PC”。</p>\n<p>她可能长得像上面的图片那样，有一个敦实的主机，一个靓丽的显示器，还有键盘、鼠标、耳机、麦克风、摄像头等等。这种类型的通常称为台式机，此外还有一体机、笔记本电脑、平板电脑等不同类型。它们都属于电脑的范畴，接下来几天的操作，我们将在笔记本电脑上进行。</p>\n<p><img data-src=\"/images/coding/%E5%8F%B0%E5%BC%8F%E6%9C%BA-%E7%AC%94%E8%AE%B0%E6%9C%AC.jpeg\" alt=\"\"></p>\n<p>你可以继续称呼她为 “电脑”，也可以叫 “笔记本”，或者叫 “notebook PC” 和 “laptop” 都没关系。</p>\n<h2 id=\"电脑能做什么\"><a class=\"markdownIt-Anchor\" href=\"#电脑能做什么\">#</a> 电脑能做什么</h2>\n<p>通过前面的观察，我们了解了电脑的基本组成情况。那电脑能为我们些什么，以及她是如何做到的呢？毕竟现在看起来电脑只是一台冰冷的机器。</p>\n<p>除了硬件系统之外，还搭配软件系统，才能组成一个完成的计算机系统。</p>\n<img data-src=\"/images/coding/计算机系统.png\" width=\"600\" />\n<p>在计算机系统中，软件和硬件是一个整体，任何一个计算机系统的运行都是系统中软硬件协作的结果。没有软件的硬件只是一堆废铁，而没有硬件的软件也只不过是空中楼阁。</p>\n<p>那么，我们能使用电脑做什么？</p>\n<p>没错，我们可以上网购物，可以搜索学习资料，可以向别人提问，可以看看外界的事物，可以听音乐看视频，可以画画 P 图，可以玩游戏等等。可以做的事情实在太多了，别忘了，还可以自己编程！</p>\n<p>但是事物都有两面性。正如很多大人总是认为，小孩子使用电脑就会沉迷游戏、沉迷网络视频。也确实，在信息时代，很多人也做不到自律、不能明辨是非，更何况是孩子。不加控制、过度使用很容易就会导致近视、影响学习成绩，甚至影响孩子们的正常生活。</p>\n<h2 id=\"电脑的优缺点\"><a class=\"markdownIt-Anchor\" href=\"#电脑的优缺点\">#</a> 电脑的优缺点</h2>\n<img data-src=\"/images/coding/天使和魔鬼.jpeg\" width=\"400\" />\n<p>在正式使用电脑之前，我们必须再提及这个话题 —— 正确对待电脑的优缺点。我列举一些暂时想到的点：</p>\n<p>优点</p>\n<ul>\n<li>开阔眼界</li>\n<li>了解知识</li>\n<li>掌握技能</li>\n<li>锻炼思维、增进认识（学习编程）</li>\n</ul>\n<p>缺点</p>\n<ul>\n<li>影响学习（过度使用）</li>\n<li>浪费时间（过度使用）</li>\n<li>损害健康（过度使用）</li>\n</ul>\n<p>发现了没，大多数的缺点，与其说是电脑的缺点，还不如说人的缺点。所以我们一定要扬长避短、合理利用，发挥电脑这位朋友的优势，不要让电脑成为我们的损友，而要成为我们的良师益友！</p>\n<p>此外，学习编程还有如下优点</p>\n<ul>\n<li>锻炼思维（促进思考、培养观察力和抽象思维）</li>\n<li>增进认识（增进对科学、文化、社会的认识）</li>\n<li>带来乐趣和满足感（编程能够提供展示自身思想和能力的舞台）</li>\n</ul>\n<h2 id=\"连接互联网\"><a class=\"markdownIt-Anchor\" href=\"#连接互联网\">#</a> 连接互联网</h2>\n<p>前面我们讨论了电脑能做些什么，我们发现其中很多任务单单一台电脑是无法完成的，还需要将电脑连接互联网（也就是俗称的 “上网”）。</p>\n<p><img data-src=\"/images/coding/%E6%8E%A5%E5%85%A5%E7%BD%91%E7%BB%9C%E7%A4%BA%E6%84%8F%E5%9B%BE.jpeg\" alt=\"\"></p>\n<p>上图是一种典型的家庭宽带上网连接示意图，通常我们将 Modern（调制解调器）俗称为 “猫”。这个猫呀，也不一定出现在家里，具体由入户的线路情况决定。这个话题有点复杂，暂时不用管。</p>\n<p><img data-src=\"/images/coding/%E7%8C%AB%E4%B8%8D%E6%98%AFModern.jpg\" alt=\"\"></p>\n<p>路由器具有扩展功能，可以通过有线和无线的方式连接多台电脑，实现多台设备一起上网（当然也包括手机）。</p>\n<p>除此之外，每台电脑中都隐藏了一个或多个网卡，可能是有线网卡或者无线网卡。台式机和笔记本都是通过他们的网卡来实现网络连接的。</p>\n<p>其实到这里，我们已经搭建起了一个 LAN（局域网，Local Area Network），相对应的，外部的网络环境称为 WAN（广域网，Wide Area Network）。</p>\n<h2 id=\"作业\"><a class=\"markdownIt-Anchor\" href=\"#作业\">#</a> 作业</h2>\n<p>（1）找一下你身边的台式机、笔记本电脑、平板和手机，观察它们的异同点。</p>\n<p>（2）启动你的电脑，如果可能，多找几台电脑看看它们的操作是否一样。</p>\n<p>（3）连接网络，打开浏览器，访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuMTYzLmNvbQ==\">https://www.163.com</span> 并注册个人邮箱。</p>\n",
            "tags": [
                "Python",
                "教孩子学编程"
            ]
        }
    ]
}